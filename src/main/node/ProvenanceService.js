/*   Copyright (C) 2013-2014 Computer Sciences Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ezbakeBaseTypes_ttypes = require('./ezbakeBaseTypes_types')
var ezbakeBaseService_ttypes = require('./ezbakeBaseService_types')


var EzBakeBaseService = require('./EzBakeBaseService')
var EzBakeBaseServiceClient = EzBakeBaseService.Client
var EzBakeBaseServiceProcessor = EzBakeBaseService.Processor
var ttypes = require('./ProvenanceService_types');
//HELPER FUNCTIONS AND STRUCTURES

ProvenanceService_addAgeOffRule_args = function(args) {
  this.securityToken = null;
  this.name = null;
  this.retentionDurationSeconds = null;
  this.maximumExecutionPeriod = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.retentionDurationSeconds !== undefined) {
      this.retentionDurationSeconds = args.retentionDurationSeconds;
    }
    if (args.maximumExecutionPeriod !== undefined) {
      this.maximumExecutionPeriod = args.maximumExecutionPeriod;
    }
  }
};
ProvenanceService_addAgeOffRule_args.prototype = {};
ProvenanceService_addAgeOffRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.retentionDurationSeconds = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.maximumExecutionPeriod = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addAgeOffRule_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addAgeOffRule_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.retentionDurationSeconds !== null && this.retentionDurationSeconds !== undefined) {
    output.writeFieldBegin('retentionDurationSeconds', Thrift.Type.I64, 3);
    output.writeI64(this.retentionDurationSeconds);
    output.writeFieldEnd();
  }
  if (this.maximumExecutionPeriod !== null && this.maximumExecutionPeriod !== undefined) {
    output.writeFieldBegin('maximumExecutionPeriod', Thrift.Type.I32, 4);
    output.writeI32(this.maximumExecutionPeriod);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addAgeOffRule_result = function(args) {
  this.success = null;
  this.security = null;
  this.nameExists = null;
  this.illegalAgeOffDurationSeconds = null;
  this.illegalAgeOffName = null;
  this.illegalMaxPeriod = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNameExistsException) {
    this.nameExists = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceIllegalAgeOffDurationSecondsException) {
    this.illegalAgeOffDurationSeconds = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceIllegalAgeOffRuleNameException) {
    this.illegalAgeOffName = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceIllegalMaximumExecutionPeriodException) {
    this.illegalMaxPeriod = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.nameExists !== undefined) {
      this.nameExists = args.nameExists;
    }
    if (args.illegalAgeOffDurationSeconds !== undefined) {
      this.illegalAgeOffDurationSeconds = args.illegalAgeOffDurationSeconds;
    }
    if (args.illegalAgeOffName !== undefined) {
      this.illegalAgeOffName = args.illegalAgeOffName;
    }
    if (args.illegalMaxPeriod !== undefined) {
      this.illegalMaxPeriod = args.illegalMaxPeriod;
    }
  }
};
ProvenanceService_addAgeOffRule_result.prototype = {};
ProvenanceService_addAgeOffRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.nameExists = new ttypes.ProvenanceAgeOffRuleNameExistsException();
        this.nameExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.illegalAgeOffDurationSeconds = new ttypes.ProvenanceIllegalAgeOffDurationSecondsException();
        this.illegalAgeOffDurationSeconds.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.illegalAgeOffName = new ttypes.ProvenanceIllegalAgeOffRuleNameException();
        this.illegalAgeOffName.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.illegalMaxPeriod = new ttypes.ProvenanceIllegalMaximumExecutionPeriodException();
        this.illegalMaxPeriod.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addAgeOffRule_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addAgeOffRule_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.nameExists !== null && this.nameExists !== undefined) {
    output.writeFieldBegin('nameExists', Thrift.Type.STRUCT, 2);
    this.nameExists.write(output);
    output.writeFieldEnd();
  }
  if (this.illegalAgeOffDurationSeconds !== null && this.illegalAgeOffDurationSeconds !== undefined) {
    output.writeFieldBegin('illegalAgeOffDurationSeconds', Thrift.Type.STRUCT, 3);
    this.illegalAgeOffDurationSeconds.write(output);
    output.writeFieldEnd();
  }
  if (this.illegalAgeOffName !== null && this.illegalAgeOffName !== undefined) {
    output.writeFieldBegin('illegalAgeOffName', Thrift.Type.STRUCT, 4);
    this.illegalAgeOffName.write(output);
    output.writeFieldEnd();
  }
  if (this.illegalMaxPeriod !== null && this.illegalMaxPeriod !== undefined) {
    output.writeFieldBegin('illegalMaxPeriod', Thrift.Type.STRUCT, 5);
    this.illegalMaxPeriod.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAgeOffRuleById_args = function(args) {
  this.securityToken = null;
  this.ruleId = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.ruleId !== undefined) {
      this.ruleId = args.ruleId;
    }
  }
};
ProvenanceService_getAgeOffRuleById_args.prototype = {};
ProvenanceService_getAgeOffRuleById_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.ruleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAgeOffRuleById_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAgeOffRuleById_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleId !== null && this.ruleId !== undefined) {
    output.writeFieldBegin('ruleId', Thrift.Type.I64, 2);
    output.writeI64(this.ruleId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAgeOffRuleById_result = function(args) {
  this.success = null;
  this.security = null;
  this.ruleNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
  }
};
ProvenanceService_getAgeOffRuleById_result.prototype = {};
ProvenanceService_getAgeOffRuleById_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.AgeOffRule();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAgeOffRuleById_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAgeOffRuleById_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 2);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAgeOffRule_args = function(args) {
  this.securityToken = null;
  this.name = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
ProvenanceService_getAgeOffRule_args.prototype = {};
ProvenanceService_getAgeOffRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAgeOffRule_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAgeOffRule_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAgeOffRule_result = function(args) {
  this.success = null;
  this.security = null;
  this.ruleNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
  }
};
ProvenanceService_getAgeOffRule_result.prototype = {};
ProvenanceService_getAgeOffRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.AgeOffRule();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAgeOffRule_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAgeOffRule_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 3);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_updateAgeOffRule_args = function(args) {
  this.securityToken = null;
  this.name = null;
  this.retentionDurationSeconds = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.retentionDurationSeconds !== undefined) {
      this.retentionDurationSeconds = args.retentionDurationSeconds;
    }
  }
};
ProvenanceService_updateAgeOffRule_args.prototype = {};
ProvenanceService_updateAgeOffRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.retentionDurationSeconds = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_updateAgeOffRule_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_updateAgeOffRule_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.retentionDurationSeconds !== null && this.retentionDurationSeconds !== undefined) {
    output.writeFieldBegin('retentionDurationSeconds', Thrift.Type.I64, 3);
    output.writeI64(this.retentionDurationSeconds);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_updateAgeOffRule_result = function(args) {
  this.security = null;
  this.ruleNotFound = null;
  this.illegalAgeOffDurationSeconds = null;
  this.illegalAgeOffName = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceIllegalAgeOffDurationSecondsException) {
    this.illegalAgeOffDurationSeconds = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceIllegalAgeOffRuleNameException) {
    this.illegalAgeOffName = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
    if (args.illegalAgeOffDurationSeconds !== undefined) {
      this.illegalAgeOffDurationSeconds = args.illegalAgeOffDurationSeconds;
    }
    if (args.illegalAgeOffName !== undefined) {
      this.illegalAgeOffName = args.illegalAgeOffName;
    }
  }
};
ProvenanceService_updateAgeOffRule_result.prototype = {};
ProvenanceService_updateAgeOffRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.illegalAgeOffDurationSeconds = new ttypes.ProvenanceIllegalAgeOffDurationSecondsException();
        this.illegalAgeOffDurationSeconds.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.illegalAgeOffName = new ttypes.ProvenanceIllegalAgeOffRuleNameException();
        this.illegalAgeOffName.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_updateAgeOffRule_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_updateAgeOffRule_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 2);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.illegalAgeOffDurationSeconds !== null && this.illegalAgeOffDurationSeconds !== undefined) {
    output.writeFieldBegin('illegalAgeOffDurationSeconds', Thrift.Type.STRUCT, 3);
    this.illegalAgeOffDurationSeconds.write(output);
    output.writeFieldEnd();
  }
  if (this.illegalAgeOffName !== null && this.illegalAgeOffName !== undefined) {
    output.writeFieldBegin('illegalAgeOffName', Thrift.Type.STRUCT, 4);
    this.illegalAgeOffName.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAllAgeOffRules_args = function(args) {
  this.securityToken = null;
  this.limit = null;
  this.page = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.limit !== undefined) {
      this.limit = args.limit;
    }
    if (args.page !== undefined) {
      this.page = args.page;
    }
  }
};
ProvenanceService_getAllAgeOffRules_args.prototype = {};
ProvenanceService_getAllAgeOffRules_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.limit = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.page = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAllAgeOffRules_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAllAgeOffRules_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.limit !== null && this.limit !== undefined) {
    output.writeFieldBegin('limit', Thrift.Type.I32, 2);
    output.writeI32(this.limit);
    output.writeFieldEnd();
  }
  if (this.page !== null && this.page !== undefined) {
    output.writeFieldBegin('page', Thrift.Type.I32, 3);
    output.writeI32(this.page);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAllAgeOffRules_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getAllAgeOffRules_result.prototype = {};
ProvenanceService_getAllAgeOffRules_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size198 = 0;
        var _rtmp3202;
        this.success = [];
        var _etype201 = 0;
        _rtmp3202 = input.readListBegin();
        _etype201 = _rtmp3202.etype;
        _size198 = _rtmp3202.size;
        for (var _i203 = 0; _i203 < _size198; ++_i203)
        {
          var elem204 = null;
          elem204 = new ttypes.AgeOffRule();
          elem204.read(input);
          this.success.push(elem204);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAllAgeOffRules_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAllAgeOffRules_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter205 in this.success)
    {
      if (this.success.hasOwnProperty(iter205))
      {
        iter205 = this.success[iter205];
        iter205.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_countAgeOffRules_args = function(args) {
  this.securityToken = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
  }
};
ProvenanceService_countAgeOffRules_args.prototype = {};
ProvenanceService_countAgeOffRules_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_countAgeOffRules_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_countAgeOffRules_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_countAgeOffRules_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_countAgeOffRules_result.prototype = {};
ProvenanceService_countAgeOffRules_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_countAgeOffRules_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_countAgeOffRules_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocument_args = function(args) {
  this.token = null;
  this.uri = null;
  this.parents = null;
  this.ageOffRules = null;
  if (args) {
    if (args.token !== undefined) {
      this.token = args.token;
    }
    if (args.uri !== undefined) {
      this.uri = args.uri;
    }
    if (args.parents !== undefined) {
      this.parents = args.parents;
    }
    if (args.ageOffRules !== undefined) {
      this.ageOffRules = args.ageOffRules;
    }
  }
};
ProvenanceService_addDocument_args.prototype = {};
ProvenanceService_addDocument_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.token = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.token.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.uri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size206 = 0;
        var _rtmp3210;
        this.parents = [];
        var _etype209 = 0;
        _rtmp3210 = input.readListBegin();
        _etype209 = _rtmp3210.etype;
        _size206 = _rtmp3210.size;
        for (var _i211 = 0; _i211 < _size206; ++_i211)
        {
          var elem212 = null;
          elem212 = new ttypes.InheritanceInfo();
          elem212.read(input);
          this.parents.push(elem212);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.LIST) {
        var _size213 = 0;
        var _rtmp3217;
        this.ageOffRules = [];
        var _etype216 = 0;
        _rtmp3217 = input.readListBegin();
        _etype216 = _rtmp3217.etype;
        _size213 = _rtmp3217.size;
        for (var _i218 = 0; _i218 < _size213; ++_i218)
        {
          var elem219 = null;
          elem219 = new ttypes.AgeOffMapping();
          elem219.read(input);
          this.ageOffRules.push(elem219);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocument_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocument_args');
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRUCT, 1);
    this.token.write(output);
    output.writeFieldEnd();
  }
  if (this.uri !== null && this.uri !== undefined) {
    output.writeFieldBegin('uri', Thrift.Type.STRING, 2);
    output.writeString(this.uri);
    output.writeFieldEnd();
  }
  if (this.parents !== null && this.parents !== undefined) {
    output.writeFieldBegin('parents', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.parents.length);
    for (var iter220 in this.parents)
    {
      if (this.parents.hasOwnProperty(iter220))
      {
        iter220 = this.parents[iter220];
        iter220.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ageOffRules !== null && this.ageOffRules !== undefined) {
    output.writeFieldBegin('ageOffRules', Thrift.Type.LIST, 4);
    output.writeListBegin(Thrift.Type.STRUCT, this.ageOffRules.length);
    for (var iter221 in this.ageOffRules)
    {
      if (this.ageOffRules.hasOwnProperty(iter221))
      {
        iter221 = this.ageOffRules[iter221];
        iter221.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocument_result = function(args) {
  this.success = null;
  this.security = null;
  this.documentExists = null;
  this.ruleNotFound = null;
  this.parentNotFound = null;
  this.circularInheritanceNotAllowed = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentExistsException) {
    this.documentExists = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceParentDocumentNotFoundException) {
    this.parentNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceCircularInheritanceNotAllowedException) {
    this.circularInheritanceNotAllowed = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentExists !== undefined) {
      this.documentExists = args.documentExists;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
    if (args.parentNotFound !== undefined) {
      this.parentNotFound = args.parentNotFound;
    }
    if (args.circularInheritanceNotAllowed !== undefined) {
      this.circularInheritanceNotAllowed = args.circularInheritanceNotAllowed;
    }
  }
};
ProvenanceService_addDocument_result.prototype = {};
ProvenanceService_addDocument_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentExists = new ttypes.ProvenanceDocumentExistsException();
        this.documentExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.parentNotFound = new ttypes.ProvenanceParentDocumentNotFoundException();
        this.parentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.circularInheritanceNotAllowed = new ttypes.ProvenanceCircularInheritanceNotAllowedException();
        this.circularInheritanceNotAllowed.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocument_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocument_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentExists !== null && this.documentExists !== undefined) {
    output.writeFieldBegin('documentExists', Thrift.Type.STRUCT, 2);
    this.documentExists.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 3);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.parentNotFound !== null && this.parentNotFound !== undefined) {
    output.writeFieldBegin('parentNotFound', Thrift.Type.STRUCT, 4);
    this.parentNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.circularInheritanceNotAllowed !== null && this.circularInheritanceNotAllowed !== undefined) {
    output.writeFieldBegin('circularInheritanceNotAllowed', Thrift.Type.STRUCT, 5);
    this.circularInheritanceNotAllowed.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocuments_args = function(args) {
  this.securityToken = null;
  this.documents = null;
  this.ageOffRules = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documents !== undefined) {
      this.documents = args.documents;
    }
    if (args.ageOffRules !== undefined) {
      this.ageOffRules = args.ageOffRules;
    }
  }
};
ProvenanceService_addDocuments_args.prototype = {};
ProvenanceService_addDocuments_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size222 = 0;
        var _rtmp3226;
        this.documents = [];
        var _etype225 = 0;
        _rtmp3226 = input.readSetBegin();
        _etype225 = _rtmp3226.etype;
        _size222 = _rtmp3226.size;
        for (var _i227 = 0; _i227 < _size222; ++_i227)
        {
          var elem228 = null;
          elem228 = new ttypes.AddDocumentEntry();
          elem228.read(input);
          this.documents.push(elem228);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.SET) {
        var _size229 = 0;
        var _rtmp3233;
        this.ageOffRules = [];
        var _etype232 = 0;
        _rtmp3233 = input.readSetBegin();
        _etype232 = _rtmp3233.etype;
        _size229 = _rtmp3233.size;
        for (var _i234 = 0; _i234 < _size229; ++_i234)
        {
          var elem235 = null;
          elem235 = new ttypes.AgeOffMapping();
          elem235.read(input);
          this.ageOffRules.push(elem235);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocuments_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocuments_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documents !== null && this.documents !== undefined) {
    output.writeFieldBegin('documents', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.STRUCT, this.documents.length);
    for (var iter236 in this.documents)
    {
      if (this.documents.hasOwnProperty(iter236))
      {
        iter236 = this.documents[iter236];
        iter236.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.ageOffRules !== null && this.ageOffRules !== undefined) {
    output.writeFieldBegin('ageOffRules', Thrift.Type.SET, 3);
    output.writeSetBegin(Thrift.Type.STRUCT, this.ageOffRules.length);
    for (var iter237 in this.ageOffRules)
    {
      if (this.ageOffRules.hasOwnProperty(iter237))
      {
        iter237 = this.ageOffRules[iter237];
        iter237.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocuments_result = function(args) {
  this.success = null;
  this.security = null;
  this.ruleNotFound = null;
  this.exceedsMaxSize = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceExceedsMaxBatchSizeException) {
    this.exceedsMaxSize = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
    if (args.exceedsMaxSize !== undefined) {
      this.exceedsMaxSize = args.exceedsMaxSize;
    }
  }
};
ProvenanceService_addDocuments_result.prototype = {};
ProvenanceService_addDocuments_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size238 = 0;
        var _rtmp3242;
        this.success = {};
        var _ktype239 = 0;
        var _vtype240 = 0;
        _rtmp3242 = input.readMapBegin();
        _ktype239 = _rtmp3242.ktype;
        _vtype240 = _rtmp3242.vtype;
        _size238 = _rtmp3242.size;
        for (var _i243 = 0; _i243 < _size238; ++_i243)
        {
          var key244 = null;
          var val245 = null;
          key244 = input.readString();
          val245 = new ttypes.AddDocumentResult();
          val245.read(input);
          this.success[key244] = val245;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.exceedsMaxSize = new ttypes.ProvenanceExceedsMaxBatchSizeException();
        this.exceedsMaxSize.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocuments_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocuments_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter246 in this.success)
    {
      if (this.success.hasOwnProperty(kiter246))
      {
        var viter247 = this.success[kiter246];
        output.writeString(kiter246);
        viter247.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 2);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.exceedsMaxSize !== null && this.exceedsMaxSize !== undefined) {
    output.writeFieldBegin('exceedsMaxSize', Thrift.Type.STRUCT, 3);
    this.exceedsMaxSize.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAddDocumentsMaxSize_args = function(args) {
  this.securityToken = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
  }
};
ProvenanceService_getAddDocumentsMaxSize_args.prototype = {};
ProvenanceService_getAddDocumentsMaxSize_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAddDocumentsMaxSize_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAddDocumentsMaxSize_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAddDocumentsMaxSize_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getAddDocumentsMaxSize_result.prototype = {};
ProvenanceService_getAddDocumentsMaxSize_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAddDocumentsMaxSize_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAddDocumentsMaxSize_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_startAgeOffEvent_args = function(args) {
  this.securityToken = null;
  this.ruleId = null;
  this.effectiveTime = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.ruleId !== undefined) {
      this.ruleId = args.ruleId;
    }
    if (args.effectiveTime !== undefined) {
      this.effectiveTime = args.effectiveTime;
    }
  }
};
ProvenanceService_startAgeOffEvent_args.prototype = {};
ProvenanceService_startAgeOffEvent_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.ruleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.effectiveTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.effectiveTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_startAgeOffEvent_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_startAgeOffEvent_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleId !== null && this.ruleId !== undefined) {
    output.writeFieldBegin('ruleId', Thrift.Type.I64, 2);
    output.writeI64(this.ruleId);
    output.writeFieldEnd();
  }
  if (this.effectiveTime !== null && this.effectiveTime !== undefined) {
    output.writeFieldBegin('effectiveTime', Thrift.Type.STRUCT, 3);
    this.effectiveTime.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_startAgeOffEvent_result = function(args) {
  this.success = null;
  this.security = null;
  this.ruleNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
  }
};
ProvenanceService_startAgeOffEvent_result.prototype = {};
ProvenanceService_startAgeOffEvent_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.AgeOffInitiationResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_startAgeOffEvent_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_startAgeOffEvent_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 2);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_markDocumentAsAged_args = function(args) {
  this.securityToken = null;
  this.agedDocumentIds = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.agedDocumentIds !== undefined) {
      this.agedDocumentIds = args.agedDocumentIds;
    }
  }
};
ProvenanceService_markDocumentAsAged_args.prototype = {};
ProvenanceService_markDocumentAsAged_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size248 = 0;
        var _rtmp3252;
        this.agedDocumentIds = [];
        var _etype251 = 0;
        _rtmp3252 = input.readSetBegin();
        _etype251 = _rtmp3252.etype;
        _size248 = _rtmp3252.size;
        for (var _i253 = 0; _i253 < _size248; ++_i253)
        {
          var elem254 = null;
          elem254 = input.readI64();
          this.agedDocumentIds.push(elem254);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_markDocumentAsAged_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_markDocumentAsAged_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.agedDocumentIds !== null && this.agedDocumentIds !== undefined) {
    output.writeFieldBegin('agedDocumentIds', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.I64, this.agedDocumentIds.length);
    for (var iter255 in this.agedDocumentIds)
    {
      if (this.agedDocumentIds.hasOwnProperty(iter255))
      {
        iter255 = this.agedDocumentIds[iter255];
        output.writeI64(iter255);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_markDocumentAsAged_result = function(args) {
  this.security = null;
  this.documentNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.documentNotFound = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentNotFound !== undefined) {
      this.documentNotFound = args.documentNotFound;
    }
  }
};
ProvenanceService_markDocumentAsAged_result.prototype = {};
ProvenanceService_markDocumentAsAged_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.documentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_markDocumentAsAged_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_markDocumentAsAged_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotFound !== null && this.documentNotFound !== undefined) {
    output.writeFieldBegin('documentNotFound', Thrift.Type.STRUCT, 2);
    this.documentNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentInfo_args = function(args) {
  this.securityToken = null;
  this.id = null;
  this.uri = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.uri !== undefined) {
      this.uri = args.uri;
    }
  }
};
ProvenanceService_getDocumentInfo_args.prototype = {};
ProvenanceService_getDocumentInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.uri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentInfo_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentInfo_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 2);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.uri !== null && this.uri !== undefined) {
    output.writeFieldBegin('uri', Thrift.Type.STRING, 3);
    output.writeString(this.uri);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentInfo_result = function(args) {
  this.success = null;
  this.security = null;
  this.docNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.docNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.docNotFound !== undefined) {
      this.docNotFound = args.docNotFound;
    }
  }
};
ProvenanceService_getDocumentInfo_result.prototype = {};
ProvenanceService_getDocumentInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.DocumentInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.docNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.docNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentInfo_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.docNotFound !== null && this.docNotFound !== undefined) {
    output.writeFieldBegin('docNotFound', Thrift.Type.STRUCT, 2);
    this.docNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentAncestors_args = function(args) {
  this.securityToken = null;
  this.uris = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.uris !== undefined) {
      this.uris = args.uris;
    }
  }
};
ProvenanceService_getDocumentAncestors_args.prototype = {};
ProvenanceService_getDocumentAncestors_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size256 = 0;
        var _rtmp3260;
        this.uris = [];
        var _etype259 = 0;
        _rtmp3260 = input.readListBegin();
        _etype259 = _rtmp3260.etype;
        _size256 = _rtmp3260.size;
        for (var _i261 = 0; _i261 < _size256; ++_i261)
        {
          var elem262 = null;
          elem262 = input.readString();
          this.uris.push(elem262);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentAncestors_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentAncestors_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.uris !== null && this.uris !== undefined) {
    output.writeFieldBegin('uris', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.uris.length);
    for (var iter263 in this.uris)
    {
      if (this.uris.hasOwnProperty(iter263))
      {
        iter263 = this.uris[iter263];
        output.writeString(iter263);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentAncestors_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getDocumentAncestors_result.prototype = {};
ProvenanceService_getDocumentAncestors_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.DerivedResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentAncestors_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentAncestors_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentDescendants_args = function(args) {
  this.securityToken = null;
  this.uris = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.uris !== undefined) {
      this.uris = args.uris;
    }
  }
};
ProvenanceService_getDocumentDescendants_args.prototype = {};
ProvenanceService_getDocumentDescendants_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size264 = 0;
        var _rtmp3268;
        this.uris = [];
        var _etype267 = 0;
        _rtmp3268 = input.readListBegin();
        _etype267 = _rtmp3268.etype;
        _size264 = _rtmp3268.size;
        for (var _i269 = 0; _i269 < _size264; ++_i269)
        {
          var elem270 = null;
          elem270 = input.readString();
          this.uris.push(elem270);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentDescendants_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentDescendants_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.uris !== null && this.uris !== undefined) {
    output.writeFieldBegin('uris', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.uris.length);
    for (var iter271 in this.uris)
    {
      if (this.uris.hasOwnProperty(iter271))
      {
        iter271 = this.uris[iter271];
        output.writeString(iter271);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentDescendants_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getDocumentDescendants_result.prototype = {};
ProvenanceService_getDocumentDescendants_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.DerivedResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentDescendants_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentDescendants_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_markDocumentForPurge_args = function(args) {
  this.securityToken = null;
  this.uris = null;
  this.name = null;
  this.description = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.uris !== undefined) {
      this.uris = args.uris;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.description !== undefined) {
      this.description = args.description;
    }
  }
};
ProvenanceService_markDocumentForPurge_args.prototype = {};
ProvenanceService_markDocumentForPurge_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size272 = 0;
        var _rtmp3276;
        this.uris = [];
        var _etype275 = 0;
        _rtmp3276 = input.readListBegin();
        _etype275 = _rtmp3276.etype;
        _size272 = _rtmp3276.size;
        for (var _i277 = 0; _i277 < _size272; ++_i277)
        {
          var elem278 = null;
          elem278 = input.readString();
          this.uris.push(elem278);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.description = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_markDocumentForPurge_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_markDocumentForPurge_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.uris !== null && this.uris !== undefined) {
    output.writeFieldBegin('uris', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.uris.length);
    for (var iter279 in this.uris)
    {
      if (this.uris.hasOwnProperty(iter279))
      {
        iter279 = this.uris[iter279];
        output.writeString(iter279);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 3);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.description !== null && this.description !== undefined) {
    output.writeFieldBegin('description', Thrift.Type.STRING, 4);
    output.writeString(this.description);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_markDocumentForPurge_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_markDocumentForPurge_result.prototype = {};
ProvenanceService_markDocumentForPurge_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PurgeInitiationResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_markDocumentForPurge_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_markDocumentForPurge_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentUriFromId_args = function(args) {
  this.securityToken = null;
  this.positionsList = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.positionsList !== undefined) {
      this.positionsList = args.positionsList;
    }
  }
};
ProvenanceService_getDocumentUriFromId_args.prototype = {};
ProvenanceService_getDocumentUriFromId_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size280 = 0;
        var _rtmp3284;
        this.positionsList = [];
        var _etype283 = 0;
        _rtmp3284 = input.readListBegin();
        _etype283 = _rtmp3284.etype;
        _size280 = _rtmp3284.size;
        for (var _i285 = 0; _i285 < _size280; ++_i285)
        {
          var elem286 = null;
          elem286 = input.readI64();
          this.positionsList.push(elem286);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentUriFromId_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentUriFromId_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.positionsList !== null && this.positionsList !== undefined) {
    output.writeFieldBegin('positionsList', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I64, this.positionsList.length);
    for (var iter287 in this.positionsList)
    {
      if (this.positionsList.hasOwnProperty(iter287))
      {
        iter287 = this.positionsList[iter287];
        output.writeI64(iter287);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentUriFromId_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getDocumentUriFromId_result.prototype = {};
ProvenanceService_getDocumentUriFromId_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PositionsToUris();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentUriFromId_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentUriFromId_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromIds_args = function(args) {
  this.securityToken = null;
  this.ids = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.ids !== undefined) {
      this.ids = args.ids;
    }
  }
};
ProvenanceService_getDocumentConvertedUrisFromIds_args.prototype = {};
ProvenanceService_getDocumentConvertedUrisFromIds_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size288 = 0;
        var _rtmp3292;
        this.ids = [];
        var _etype291 = 0;
        _rtmp3292 = input.readSetBegin();
        _etype291 = _rtmp3292.etype;
        _size288 = _rtmp3292.size;
        for (var _i293 = 0; _i293 < _size288; ++_i293)
        {
          var elem294 = null;
          elem294 = input.readI64();
          this.ids.push(elem294);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromIds_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentConvertedUrisFromIds_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.ids !== null && this.ids !== undefined) {
    output.writeFieldBegin('ids', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.I64, this.ids.length);
    for (var iter295 in this.ids)
    {
      if (this.ids.hasOwnProperty(iter295))
      {
        iter295 = this.ids[iter295];
        output.writeI64(iter295);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromIds_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getDocumentConvertedUrisFromIds_result.prototype = {};
ProvenanceService_getDocumentConvertedUrisFromIds_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ConversionResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromIds_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentConvertedUrisFromIds_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromUris_args = function(args) {
  this.securityToken = null;
  this.uris = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.uris !== undefined) {
      this.uris = args.uris;
    }
  }
};
ProvenanceService_getDocumentConvertedUrisFromUris_args.prototype = {};
ProvenanceService_getDocumentConvertedUrisFromUris_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size296 = 0;
        var _rtmp3300;
        this.uris = [];
        var _etype299 = 0;
        _rtmp3300 = input.readSetBegin();
        _etype299 = _rtmp3300.etype;
        _size296 = _rtmp3300.size;
        for (var _i301 = 0; _i301 < _size296; ++_i301)
        {
          var elem302 = null;
          elem302 = input.readString();
          this.uris.push(elem302);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromUris_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentConvertedUrisFromUris_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.uris !== null && this.uris !== undefined) {
    output.writeFieldBegin('uris', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.STRING, this.uris.length);
    for (var iter303 in this.uris)
    {
      if (this.uris.hasOwnProperty(iter303))
      {
        iter303 = this.uris[iter303];
        output.writeString(iter303);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromUris_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getDocumentConvertedUrisFromUris_result.prototype = {};
ProvenanceService_getDocumentConvertedUrisFromUris_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ConversionResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getDocumentConvertedUrisFromUris_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getDocumentConvertedUrisFromUris_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getPurgeInfo_args = function(args) {
  this.securityToken = null;
  this.purgeId = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.purgeId !== undefined) {
      this.purgeId = args.purgeId;
    }
  }
};
ProvenanceService_getPurgeInfo_args.prototype = {};
ProvenanceService_getPurgeInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.purgeId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getPurgeInfo_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getPurgeInfo_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.purgeId !== null && this.purgeId !== undefined) {
    output.writeFieldBegin('purgeId', Thrift.Type.I64, 2);
    output.writeI64(this.purgeId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getPurgeInfo_result = function(args) {
  this.success = null;
  this.security = null;
  this.purgeNotFound = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenancePurgeIdNotFoundException) {
    this.purgeNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.purgeNotFound !== undefined) {
      this.purgeNotFound = args.purgeNotFound;
    }
  }
};
ProvenanceService_getPurgeInfo_result.prototype = {};
ProvenanceService_getPurgeInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PurgeInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.purgeNotFound = new ttypes.ProvenancePurgeIdNotFoundException();
        this.purgeNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getPurgeInfo_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getPurgeInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.purgeNotFound !== null && this.purgeNotFound !== undefined) {
    output.writeFieldBegin('purgeNotFound', Thrift.Type.STRUCT, 2);
    this.purgeNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAllPurgeIds_args = function(args) {
  this.securityToken = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
  }
};
ProvenanceService_getAllPurgeIds_args.prototype = {};
ProvenanceService_getAllPurgeIds_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAllPurgeIds_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAllPurgeIds_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_getAllPurgeIds_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_getAllPurgeIds_result.prototype = {};
ProvenanceService_getAllPurgeIds_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size304 = 0;
        var _rtmp3308;
        this.success = [];
        var _etype307 = 0;
        _rtmp3308 = input.readListBegin();
        _etype307 = _rtmp3308.etype;
        _size304 = _rtmp3308.size;
        for (var _i309 = 0; _i309 < _size304; ++_i309)
        {
          var elem310 = null;
          elem310 = input.readI64();
          this.success.push(elem310);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_getAllPurgeIds_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_getAllPurgeIds_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.I64, this.success.length);
    for (var iter311 in this.success)
    {
      if (this.success.hasOwnProperty(iter311))
      {
        iter311 = this.success[iter311];
        output.writeI64(iter311);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_updatePurge_args = function(args) {
  this.securityToken = null;
  this.purgeId = null;
  this.completelyPurged = null;
  this.note = null;
  this.resolved = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.purgeId !== undefined) {
      this.purgeId = args.purgeId;
    }
    if (args.completelyPurged !== undefined) {
      this.completelyPurged = args.completelyPurged;
    }
    if (args.note !== undefined) {
      this.note = args.note;
    }
    if (args.resolved !== undefined) {
      this.resolved = args.resolved;
    }
  }
};
ProvenanceService_updatePurge_args.prototype = {};
ProvenanceService_updatePurge_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.purgeId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.SET) {
        var _size312 = 0;
        var _rtmp3316;
        this.completelyPurged = [];
        var _etype315 = 0;
        _rtmp3316 = input.readSetBegin();
        _etype315 = _rtmp3316.etype;
        _size312 = _rtmp3316.size;
        for (var _i317 = 0; _i317 < _size312; ++_i317)
        {
          var elem318 = null;
          elem318 = input.readI64();
          this.completelyPurged.push(elem318);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.note = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.resolved = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_updatePurge_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_updatePurge_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.purgeId !== null && this.purgeId !== undefined) {
    output.writeFieldBegin('purgeId', Thrift.Type.I64, 2);
    output.writeI64(this.purgeId);
    output.writeFieldEnd();
  }
  if (this.completelyPurged !== null && this.completelyPurged !== undefined) {
    output.writeFieldBegin('completelyPurged', Thrift.Type.SET, 3);
    output.writeSetBegin(Thrift.Type.I64, this.completelyPurged.length);
    for (var iter319 in this.completelyPurged)
    {
      if (this.completelyPurged.hasOwnProperty(iter319))
      {
        iter319 = this.completelyPurged[iter319];
        output.writeI64(iter319);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.note !== null && this.note !== undefined) {
    output.writeFieldBegin('note', Thrift.Type.STRING, 4);
    output.writeString(this.note);
    output.writeFieldEnd();
  }
  if (this.resolved !== null && this.resolved !== undefined) {
    output.writeFieldBegin('resolved', Thrift.Type.BOOL, 5);
    output.writeBool(this.resolved);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_updatePurge_result = function(args) {
  this.security = null;
  this.purgeNotFound = null;
  this.documentNotInPurge = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenancePurgeIdNotFoundException) {
    this.purgeNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotInPurgeException) {
    this.documentNotInPurge = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.purgeNotFound !== undefined) {
      this.purgeNotFound = args.purgeNotFound;
    }
    if (args.documentNotInPurge !== undefined) {
      this.documentNotInPurge = args.documentNotInPurge;
    }
  }
};
ProvenanceService_updatePurge_result.prototype = {};
ProvenanceService_updatePurge_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.purgeNotFound = new ttypes.ProvenancePurgeIdNotFoundException();
        this.purgeNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotInPurge = new ttypes.ProvenanceDocumentNotInPurgeException();
        this.documentNotInPurge.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_updatePurge_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_updatePurge_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.purgeNotFound !== null && this.purgeNotFound !== undefined) {
    output.writeFieldBegin('purgeNotFound', Thrift.Type.STRUCT, 2);
    this.purgeNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotInPurge !== null && this.documentNotInPurge !== undefined) {
    output.writeFieldBegin('documentNotInPurge', Thrift.Type.STRUCT, 3);
    this.documentNotInPurge.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_removeDocumentAgeOffRuleInheritance_args = function(args) {
  this.securityToken = null;
  this.documentId = null;
  this.documentUri = null;
  this.parentId = null;
  this.parentUri = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.parentId !== undefined) {
      this.parentId = args.parentId;
    }
    if (args.parentUri !== undefined) {
      this.parentUri = args.parentUri;
    }
  }
};
ProvenanceService_removeDocumentAgeOffRuleInheritance_args.prototype = {};
ProvenanceService_removeDocumentAgeOffRuleInheritance_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I64) {
        this.parentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.parentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_removeDocumentAgeOffRuleInheritance_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_removeDocumentAgeOffRuleInheritance_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 3);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.parentId !== null && this.parentId !== undefined) {
    output.writeFieldBegin('parentId', Thrift.Type.I64, 4);
    output.writeI64(this.parentId);
    output.writeFieldEnd();
  }
  if (this.parentUri !== null && this.parentUri !== undefined) {
    output.writeFieldBegin('parentUri', Thrift.Type.STRING, 5);
    output.writeString(this.parentUri);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_removeDocumentAgeOffRuleInheritance_result = function(args) {
  this.security = null;
  this.documentNotFound = null;
  this.alreadyAged = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.documentNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAlreadyAgedException) {
    this.alreadyAged = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentNotFound !== undefined) {
      this.documentNotFound = args.documentNotFound;
    }
    if (args.alreadyAged !== undefined) {
      this.alreadyAged = args.alreadyAged;
    }
  }
};
ProvenanceService_removeDocumentAgeOffRuleInheritance_result.prototype = {};
ProvenanceService_removeDocumentAgeOffRuleInheritance_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.documentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.alreadyAged = new ttypes.ProvenanceAlreadyAgedException();
        this.alreadyAged.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_removeDocumentAgeOffRuleInheritance_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_removeDocumentAgeOffRuleInheritance_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotFound !== null && this.documentNotFound !== undefined) {
    output.writeFieldBegin('documentNotFound', Thrift.Type.STRUCT, 2);
    this.documentNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.alreadyAged !== null && this.alreadyAged !== undefined) {
    output.writeFieldBegin('alreadyAged', Thrift.Type.STRUCT, 3);
    this.alreadyAged.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_removeDocumentExplicitAgeOffRule_args = function(args) {
  this.securityToken = null;
  this.documentId = null;
  this.documentUri = null;
  this.ageOffRuleId = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.ageOffRuleId !== undefined) {
      this.ageOffRuleId = args.ageOffRuleId;
    }
  }
};
ProvenanceService_removeDocumentExplicitAgeOffRule_args.prototype = {};
ProvenanceService_removeDocumentExplicitAgeOffRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I64) {
        this.ageOffRuleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_removeDocumentExplicitAgeOffRule_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_removeDocumentExplicitAgeOffRule_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 3);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.ageOffRuleId !== null && this.ageOffRuleId !== undefined) {
    output.writeFieldBegin('ageOffRuleId', Thrift.Type.I64, 4);
    output.writeI64(this.ageOffRuleId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_removeDocumentExplicitAgeOffRule_result = function(args) {
  this.security = null;
  this.documentNotFound = null;
  this.ruleNotFound = null;
  this.alreadyAged = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.documentNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAlreadyAgedException) {
    this.alreadyAged = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentNotFound !== undefined) {
      this.documentNotFound = args.documentNotFound;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
    if (args.alreadyAged !== undefined) {
      this.alreadyAged = args.alreadyAged;
    }
  }
};
ProvenanceService_removeDocumentExplicitAgeOffRule_result.prototype = {};
ProvenanceService_removeDocumentExplicitAgeOffRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.documentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.alreadyAged = new ttypes.ProvenanceAlreadyAgedException();
        this.alreadyAged.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_removeDocumentExplicitAgeOffRule_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_removeDocumentExplicitAgeOffRule_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotFound !== null && this.documentNotFound !== undefined) {
    output.writeFieldBegin('documentNotFound', Thrift.Type.STRUCT, 2);
    this.documentNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 3);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.alreadyAged !== null && this.alreadyAged !== undefined) {
    output.writeFieldBegin('alreadyAged', Thrift.Type.STRUCT, 4);
    this.alreadyAged.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocumentExplicitAgeOffRule_args = function(args) {
  this.securityToken = null;
  this.documentId = null;
  this.documentUri = null;
  this.ageOffMapping = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.ageOffMapping !== undefined) {
      this.ageOffMapping = args.ageOffMapping;
    }
  }
};
ProvenanceService_addDocumentExplicitAgeOffRule_args.prototype = {};
ProvenanceService_addDocumentExplicitAgeOffRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ageOffMapping = new ttypes.AgeOffMapping();
        this.ageOffMapping.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocumentExplicitAgeOffRule_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocumentExplicitAgeOffRule_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 3);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.ageOffMapping !== null && this.ageOffMapping !== undefined) {
    output.writeFieldBegin('ageOffMapping', Thrift.Type.STRUCT, 4);
    this.ageOffMapping.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocumentExplicitAgeOffRule_result = function(args) {
  this.security = null;
  this.documentNotFound = null;
  this.ruleNotFound = null;
  this.alreadyAged = null;
  this.edgeExists = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.documentNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffRuleNotFoundException) {
    this.ruleNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAlreadyAgedException) {
    this.alreadyAged = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffExistsException) {
    this.edgeExists = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentNotFound !== undefined) {
      this.documentNotFound = args.documentNotFound;
    }
    if (args.ruleNotFound !== undefined) {
      this.ruleNotFound = args.ruleNotFound;
    }
    if (args.alreadyAged !== undefined) {
      this.alreadyAged = args.alreadyAged;
    }
    if (args.edgeExists !== undefined) {
      this.edgeExists = args.edgeExists;
    }
  }
};
ProvenanceService_addDocumentExplicitAgeOffRule_result.prototype = {};
ProvenanceService_addDocumentExplicitAgeOffRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.documentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ruleNotFound = new ttypes.ProvenanceAgeOffRuleNotFoundException();
        this.ruleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.alreadyAged = new ttypes.ProvenanceAlreadyAgedException();
        this.alreadyAged.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.edgeExists = new ttypes.ProvenanceAgeOffExistsException();
        this.edgeExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocumentExplicitAgeOffRule_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocumentExplicitAgeOffRule_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotFound !== null && this.documentNotFound !== undefined) {
    output.writeFieldBegin('documentNotFound', Thrift.Type.STRUCT, 2);
    this.documentNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.ruleNotFound !== null && this.ruleNotFound !== undefined) {
    output.writeFieldBegin('ruleNotFound', Thrift.Type.STRUCT, 3);
    this.ruleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.alreadyAged !== null && this.alreadyAged !== undefined) {
    output.writeFieldBegin('alreadyAged', Thrift.Type.STRUCT, 4);
    this.alreadyAged.write(output);
    output.writeFieldEnd();
  }
  if (this.edgeExists !== null && this.edgeExists !== undefined) {
    output.writeFieldBegin('edgeExists', Thrift.Type.STRUCT, 5);
    this.edgeExists.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocumentInheritanceInfo_args = function(args) {
  this.securityToken = null;
  this.documentId = null;
  this.documentUri = null;
  this.inheritanceInfo = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.inheritanceInfo !== undefined) {
      this.inheritanceInfo = args.inheritanceInfo;
    }
  }
};
ProvenanceService_addDocumentInheritanceInfo_args.prototype = {};
ProvenanceService_addDocumentInheritanceInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.inheritanceInfo = new ttypes.InheritanceInfo();
        this.inheritanceInfo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocumentInheritanceInfo_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocumentInheritanceInfo_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 3);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.inheritanceInfo !== null && this.inheritanceInfo !== undefined) {
    output.writeFieldBegin('inheritanceInfo', Thrift.Type.STRUCT, 4);
    this.inheritanceInfo.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_addDocumentInheritanceInfo_result = function(args) {
  this.security = null;
  this.documentNotFound = null;
  this.circularInheritance = null;
  this.alreadyAged = null;
  this.inheritanceExists = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceDocumentNotFoundException) {
    this.documentNotFound = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceCircularInheritanceNotAllowedException) {
    this.circularInheritance = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAlreadyAgedException) {
    this.alreadyAged = args;
    return;
  }
  if (args instanceof ttypes.ProvenanceAgeOffInheritanceExistsException) {
    this.inheritanceExists = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
    if (args.documentNotFound !== undefined) {
      this.documentNotFound = args.documentNotFound;
    }
    if (args.circularInheritance !== undefined) {
      this.circularInheritance = args.circularInheritance;
    }
    if (args.alreadyAged !== undefined) {
      this.alreadyAged = args.alreadyAged;
    }
    if (args.inheritanceExists !== undefined) {
      this.inheritanceExists = args.inheritanceExists;
    }
  }
};
ProvenanceService_addDocumentInheritanceInfo_result.prototype = {};
ProvenanceService_addDocumentInheritanceInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.documentNotFound = new ttypes.ProvenanceDocumentNotFoundException();
        this.documentNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.circularInheritance = new ttypes.ProvenanceCircularInheritanceNotAllowedException();
        this.circularInheritance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.alreadyAged = new ttypes.ProvenanceAlreadyAgedException();
        this.alreadyAged.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.inheritanceExists = new ttypes.ProvenanceAgeOffInheritanceExistsException();
        this.inheritanceExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_addDocumentInheritanceInfo_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_addDocumentInheritanceInfo_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  if (this.documentNotFound !== null && this.documentNotFound !== undefined) {
    output.writeFieldBegin('documentNotFound', Thrift.Type.STRUCT, 2);
    this.documentNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.circularInheritance !== null && this.circularInheritance !== undefined) {
    output.writeFieldBegin('circularInheritance', Thrift.Type.STRUCT, 3);
    this.circularInheritance.write(output);
    output.writeFieldEnd();
  }
  if (this.alreadyAged !== null && this.alreadyAged !== undefined) {
    output.writeFieldBegin('alreadyAged', Thrift.Type.STRUCT, 4);
    this.alreadyAged.write(output);
    output.writeFieldEnd();
  }
  if (this.inheritanceExists !== null && this.inheritanceExists !== undefined) {
    output.writeFieldBegin('inheritanceExists', Thrift.Type.STRUCT, 5);
    this.inheritanceExists.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_recordObjectAccess_args = function(args) {
  this.securityToken = null;
  this.documentUri = null;
  this.accessType = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.accessType !== undefined) {
      this.accessType = args.accessType;
    }
  }
};
ProvenanceService_recordObjectAccess_args.prototype = {};
ProvenanceService_recordObjectAccess_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.accessType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_recordObjectAccess_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_recordObjectAccess_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 2);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.accessType !== null && this.accessType !== undefined) {
    output.writeFieldBegin('accessType', Thrift.Type.I32, 3);
    output.writeI32(this.accessType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_recordObjectAccess_result = function(args) {
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_recordObjectAccess_result.prototype = {};
ProvenanceService_recordObjectAccess_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_recordObjectAccess_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_recordObjectAccess_result');
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_fetchUsersDocuments_args = function(args) {
  this.securityToken = null;
  this.userPrincipal = null;
  this.startDateTime = null;
  this.stopDateTime = null;
  this.numToFetch = null;
  this.continuationPoint = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.userPrincipal !== undefined) {
      this.userPrincipal = args.userPrincipal;
    }
    if (args.startDateTime !== undefined) {
      this.startDateTime = args.startDateTime;
    }
    if (args.stopDateTime !== undefined) {
      this.stopDateTime = args.stopDateTime;
    }
    if (args.numToFetch !== undefined) {
      this.numToFetch = args.numToFetch;
    }
    if (args.continuationPoint !== undefined) {
      this.continuationPoint = args.continuationPoint;
    }
  }
};
ProvenanceService_fetchUsersDocuments_args.prototype = {};
ProvenanceService_fetchUsersDocuments_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.userPrincipal = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.startDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.startDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.stopDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.stopDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.numToFetch = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.continuationPoint = new ttypes.AccumuloContinuationPoint();
        this.continuationPoint.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_fetchUsersDocuments_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_fetchUsersDocuments_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.userPrincipal !== null && this.userPrincipal !== undefined) {
    output.writeFieldBegin('userPrincipal', Thrift.Type.STRING, 2);
    output.writeString(this.userPrincipal);
    output.writeFieldEnd();
  }
  if (this.startDateTime !== null && this.startDateTime !== undefined) {
    output.writeFieldBegin('startDateTime', Thrift.Type.STRUCT, 3);
    this.startDateTime.write(output);
    output.writeFieldEnd();
  }
  if (this.stopDateTime !== null && this.stopDateTime !== undefined) {
    output.writeFieldBegin('stopDateTime', Thrift.Type.STRUCT, 4);
    this.stopDateTime.write(output);
    output.writeFieldEnd();
  }
  if (this.numToFetch !== null && this.numToFetch !== undefined) {
    output.writeFieldBegin('numToFetch', Thrift.Type.I32, 5);
    output.writeI32(this.numToFetch);
    output.writeFieldEnd();
  }
  if (this.continuationPoint !== null && this.continuationPoint !== undefined) {
    output.writeFieldBegin('continuationPoint', Thrift.Type.STRUCT, 6);
    this.continuationPoint.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_fetchUsersDocuments_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_fetchUsersDocuments_result.prototype = {};
ProvenanceService_fetchUsersDocuments_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ResultsAndContinuation();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_fetchUsersDocuments_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_fetchUsersDocuments_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_fetchDocumentUsers_args = function(args) {
  this.securityToken = null;
  this.documentUri = null;
  this.startDateTime = null;
  this.stopDateTime = null;
  this.numToFetch = null;
  this.continuationPoint = null;
  if (args) {
    if (args.securityToken !== undefined) {
      this.securityToken = args.securityToken;
    }
    if (args.documentUri !== undefined) {
      this.documentUri = args.documentUri;
    }
    if (args.startDateTime !== undefined) {
      this.startDateTime = args.startDateTime;
    }
    if (args.stopDateTime !== undefined) {
      this.stopDateTime = args.stopDateTime;
    }
    if (args.numToFetch !== undefined) {
      this.numToFetch = args.numToFetch;
    }
    if (args.continuationPoint !== undefined) {
      this.continuationPoint = args.continuationPoint;
    }
  }
};
ProvenanceService_fetchDocumentUsers_args.prototype = {};
ProvenanceService_fetchDocumentUsers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.securityToken = new ezbakeBaseTypes_ttypes.EzSecurityToken();
        this.securityToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.documentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.startDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.startDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.stopDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.stopDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.numToFetch = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.continuationPoint = new ttypes.AccumuloContinuationPoint();
        this.continuationPoint.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_fetchDocumentUsers_args.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_fetchDocumentUsers_args');
  if (this.securityToken !== null && this.securityToken !== undefined) {
    output.writeFieldBegin('securityToken', Thrift.Type.STRUCT, 1);
    this.securityToken.write(output);
    output.writeFieldEnd();
  }
  if (this.documentUri !== null && this.documentUri !== undefined) {
    output.writeFieldBegin('documentUri', Thrift.Type.STRING, 2);
    output.writeString(this.documentUri);
    output.writeFieldEnd();
  }
  if (this.startDateTime !== null && this.startDateTime !== undefined) {
    output.writeFieldBegin('startDateTime', Thrift.Type.STRUCT, 3);
    this.startDateTime.write(output);
    output.writeFieldEnd();
  }
  if (this.stopDateTime !== null && this.stopDateTime !== undefined) {
    output.writeFieldBegin('stopDateTime', Thrift.Type.STRUCT, 4);
    this.stopDateTime.write(output);
    output.writeFieldEnd();
  }
  if (this.numToFetch !== null && this.numToFetch !== undefined) {
    output.writeFieldBegin('numToFetch', Thrift.Type.I32, 5);
    output.writeI32(this.numToFetch);
    output.writeFieldEnd();
  }
  if (this.continuationPoint !== null && this.continuationPoint !== undefined) {
    output.writeFieldBegin('continuationPoint', Thrift.Type.STRUCT, 6);
    this.continuationPoint.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceService_fetchDocumentUsers_result = function(args) {
  this.success = null;
  this.security = null;
  if (args instanceof ezbakeBaseTypes_ttypes.EzSecurityTokenException) {
    this.security = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.security !== undefined) {
      this.security = args.security;
    }
  }
};
ProvenanceService_fetchDocumentUsers_result.prototype = {};
ProvenanceService_fetchDocumentUsers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ResultsAndContinuation();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.security = new ezbakeBaseTypes_ttypes.EzSecurityTokenException();
        this.security.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceService_fetchDocumentUsers_result.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceService_fetchDocumentUsers_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.security !== null && this.security !== undefined) {
    output.writeFieldBegin('security', Thrift.Type.STRUCT, 1);
    this.security.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this.seqid = 0;
    this._reqs = {};
};
Thrift.inherits(ProvenanceServiceClient, EzBakeBaseServiceClient)
ProvenanceServiceClient.prototype.addAgeOffRule = function(securityToken, name, retentionDurationSeconds, maximumExecutionPeriod, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_addAgeOffRule(securityToken, name, retentionDurationSeconds, maximumExecutionPeriod);
};

ProvenanceServiceClient.prototype.send_addAgeOffRule = function(securityToken, name, retentionDurationSeconds, maximumExecutionPeriod) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addAgeOffRule', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_addAgeOffRule_args();
  args.securityToken = securityToken;
  args.name = name;
  args.retentionDurationSeconds = retentionDurationSeconds;
  args.maximumExecutionPeriod = maximumExecutionPeriod;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_addAgeOffRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_addAgeOffRule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.nameExists) {
    return callback(result.nameExists);
  }
  if (null !== result.illegalAgeOffDurationSeconds) {
    return callback(result.illegalAgeOffDurationSeconds);
  }
  if (null !== result.illegalAgeOffName) {
    return callback(result.illegalAgeOffName);
  }
  if (null !== result.illegalMaxPeriod) {
    return callback(result.illegalMaxPeriod);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addAgeOffRule failed: unknown result');
};
ProvenanceServiceClient.prototype.getAgeOffRuleById = function(securityToken, ruleId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getAgeOffRuleById(securityToken, ruleId);
};

ProvenanceServiceClient.prototype.send_getAgeOffRuleById = function(securityToken, ruleId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAgeOffRuleById', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getAgeOffRuleById_args();
  args.securityToken = securityToken;
  args.ruleId = ruleId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getAgeOffRuleById = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getAgeOffRuleById_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAgeOffRuleById failed: unknown result');
};
ProvenanceServiceClient.prototype.getAgeOffRule = function(securityToken, name, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getAgeOffRule(securityToken, name);
};

ProvenanceServiceClient.prototype.send_getAgeOffRule = function(securityToken, name) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAgeOffRule', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getAgeOffRule_args();
  args.securityToken = securityToken;
  args.name = name;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getAgeOffRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getAgeOffRule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAgeOffRule failed: unknown result');
};
ProvenanceServiceClient.prototype.updateAgeOffRule = function(securityToken, name, retentionDurationSeconds, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_updateAgeOffRule(securityToken, name, retentionDurationSeconds);
};

ProvenanceServiceClient.prototype.send_updateAgeOffRule = function(securityToken, name, retentionDurationSeconds) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updateAgeOffRule', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_updateAgeOffRule_args();
  args.securityToken = securityToken;
  args.name = name;
  args.retentionDurationSeconds = retentionDurationSeconds;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_updateAgeOffRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_updateAgeOffRule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.illegalAgeOffDurationSeconds) {
    return callback(result.illegalAgeOffDurationSeconds);
  }
  if (null !== result.illegalAgeOffName) {
    return callback(result.illegalAgeOffName);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.getAllAgeOffRules = function(securityToken, limit, page, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getAllAgeOffRules(securityToken, limit, page);
};

ProvenanceServiceClient.prototype.send_getAllAgeOffRules = function(securityToken, limit, page) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAllAgeOffRules', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getAllAgeOffRules_args();
  args.securityToken = securityToken;
  args.limit = limit;
  args.page = page;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getAllAgeOffRules = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getAllAgeOffRules_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAllAgeOffRules failed: unknown result');
};
ProvenanceServiceClient.prototype.countAgeOffRules = function(securityToken, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_countAgeOffRules(securityToken);
};

ProvenanceServiceClient.prototype.send_countAgeOffRules = function(securityToken) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('countAgeOffRules', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_countAgeOffRules_args();
  args.securityToken = securityToken;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_countAgeOffRules = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_countAgeOffRules_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('countAgeOffRules failed: unknown result');
};
ProvenanceServiceClient.prototype.addDocument = function(token, uri, parents, ageOffRules, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_addDocument(token, uri, parents, ageOffRules);
};

ProvenanceServiceClient.prototype.send_addDocument = function(token, uri, parents, ageOffRules) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addDocument', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_addDocument_args();
  args.token = token;
  args.uri = uri;
  args.parents = parents;
  args.ageOffRules = ageOffRules;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_addDocument = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_addDocument_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentExists) {
    return callback(result.documentExists);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.parentNotFound) {
    return callback(result.parentNotFound);
  }
  if (null !== result.circularInheritanceNotAllowed) {
    return callback(result.circularInheritanceNotAllowed);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addDocument failed: unknown result');
};
ProvenanceServiceClient.prototype.addDocuments = function(securityToken, documents, ageOffRules, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_addDocuments(securityToken, documents, ageOffRules);
};

ProvenanceServiceClient.prototype.send_addDocuments = function(securityToken, documents, ageOffRules) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addDocuments', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_addDocuments_args();
  args.securityToken = securityToken;
  args.documents = documents;
  args.ageOffRules = ageOffRules;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_addDocuments = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_addDocuments_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.exceedsMaxSize) {
    return callback(result.exceedsMaxSize);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addDocuments failed: unknown result');
};
ProvenanceServiceClient.prototype.getAddDocumentsMaxSize = function(securityToken, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getAddDocumentsMaxSize(securityToken);
};

ProvenanceServiceClient.prototype.send_getAddDocumentsMaxSize = function(securityToken) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAddDocumentsMaxSize', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getAddDocumentsMaxSize_args();
  args.securityToken = securityToken;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getAddDocumentsMaxSize = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getAddDocumentsMaxSize_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAddDocumentsMaxSize failed: unknown result');
};
ProvenanceServiceClient.prototype.startAgeOffEvent = function(securityToken, ruleId, effectiveTime, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_startAgeOffEvent(securityToken, ruleId, effectiveTime);
};

ProvenanceServiceClient.prototype.send_startAgeOffEvent = function(securityToken, ruleId, effectiveTime) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('startAgeOffEvent', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_startAgeOffEvent_args();
  args.securityToken = securityToken;
  args.ruleId = ruleId;
  args.effectiveTime = effectiveTime;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_startAgeOffEvent = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_startAgeOffEvent_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('startAgeOffEvent failed: unknown result');
};
ProvenanceServiceClient.prototype.markDocumentAsAged = function(securityToken, agedDocumentIds, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_markDocumentAsAged(securityToken, agedDocumentIds);
};

ProvenanceServiceClient.prototype.send_markDocumentAsAged = function(securityToken, agedDocumentIds) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('markDocumentAsAged', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_markDocumentAsAged_args();
  args.securityToken = securityToken;
  args.agedDocumentIds = agedDocumentIds;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_markDocumentAsAged = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_markDocumentAsAged_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentNotFound) {
    return callback(result.documentNotFound);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.getDocumentInfo = function(securityToken, id, uri, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentInfo(securityToken, id, uri);
};

ProvenanceServiceClient.prototype.send_getDocumentInfo = function(securityToken, id, uri) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentInfo_args();
  args.securityToken = securityToken;
  args.id = id;
  args.uri = uri;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.docNotFound) {
    return callback(result.docNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentInfo failed: unknown result');
};
ProvenanceServiceClient.prototype.getDocumentAncestors = function(securityToken, uris, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentAncestors(securityToken, uris);
};

ProvenanceServiceClient.prototype.send_getDocumentAncestors = function(securityToken, uris) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentAncestors', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentAncestors_args();
  args.securityToken = securityToken;
  args.uris = uris;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentAncestors = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentAncestors_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentAncestors failed: unknown result');
};
ProvenanceServiceClient.prototype.getDocumentDescendants = function(securityToken, uris, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentDescendants(securityToken, uris);
};

ProvenanceServiceClient.prototype.send_getDocumentDescendants = function(securityToken, uris) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentDescendants', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentDescendants_args();
  args.securityToken = securityToken;
  args.uris = uris;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentDescendants = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentDescendants_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentDescendants failed: unknown result');
};
ProvenanceServiceClient.prototype.markDocumentForPurge = function(securityToken, uris, name, description, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_markDocumentForPurge(securityToken, uris, name, description);
};

ProvenanceServiceClient.prototype.send_markDocumentForPurge = function(securityToken, uris, name, description) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('markDocumentForPurge', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_markDocumentForPurge_args();
  args.securityToken = securityToken;
  args.uris = uris;
  args.name = name;
  args.description = description;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_markDocumentForPurge = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_markDocumentForPurge_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('markDocumentForPurge failed: unknown result');
};
ProvenanceServiceClient.prototype.getDocumentUriFromId = function(securityToken, positionsList, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentUriFromId(securityToken, positionsList);
};

ProvenanceServiceClient.prototype.send_getDocumentUriFromId = function(securityToken, positionsList) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentUriFromId', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentUriFromId_args();
  args.securityToken = securityToken;
  args.positionsList = positionsList;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentUriFromId = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentUriFromId_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentUriFromId failed: unknown result');
};
ProvenanceServiceClient.prototype.getDocumentConvertedUrisFromIds = function(securityToken, ids, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentConvertedUrisFromIds(securityToken, ids);
};

ProvenanceServiceClient.prototype.send_getDocumentConvertedUrisFromIds = function(securityToken, ids) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentConvertedUrisFromIds', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentConvertedUrisFromIds_args();
  args.securityToken = securityToken;
  args.ids = ids;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentConvertedUrisFromIds = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentConvertedUrisFromIds_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentConvertedUrisFromIds failed: unknown result');
};
ProvenanceServiceClient.prototype.getDocumentConvertedUrisFromUris = function(securityToken, uris, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDocumentConvertedUrisFromUris(securityToken, uris);
};

ProvenanceServiceClient.prototype.send_getDocumentConvertedUrisFromUris = function(securityToken, uris) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDocumentConvertedUrisFromUris', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getDocumentConvertedUrisFromUris_args();
  args.securityToken = securityToken;
  args.uris = uris;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getDocumentConvertedUrisFromUris = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getDocumentConvertedUrisFromUris_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDocumentConvertedUrisFromUris failed: unknown result');
};
ProvenanceServiceClient.prototype.getPurgeInfo = function(securityToken, purgeId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getPurgeInfo(securityToken, purgeId);
};

ProvenanceServiceClient.prototype.send_getPurgeInfo = function(securityToken, purgeId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getPurgeInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getPurgeInfo_args();
  args.securityToken = securityToken;
  args.purgeId = purgeId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getPurgeInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getPurgeInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.purgeNotFound) {
    return callback(result.purgeNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getPurgeInfo failed: unknown result');
};
ProvenanceServiceClient.prototype.getAllPurgeIds = function(securityToken, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getAllPurgeIds(securityToken);
};

ProvenanceServiceClient.prototype.send_getAllPurgeIds = function(securityToken) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAllPurgeIds', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_getAllPurgeIds_args();
  args.securityToken = securityToken;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_getAllPurgeIds = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_getAllPurgeIds_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAllPurgeIds failed: unknown result');
};
ProvenanceServiceClient.prototype.updatePurge = function(securityToken, purgeId, completelyPurged, note, resolved, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_updatePurge(securityToken, purgeId, completelyPurged, note, resolved);
};

ProvenanceServiceClient.prototype.send_updatePurge = function(securityToken, purgeId, completelyPurged, note, resolved) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updatePurge', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_updatePurge_args();
  args.securityToken = securityToken;
  args.purgeId = purgeId;
  args.completelyPurged = completelyPurged;
  args.note = note;
  args.resolved = resolved;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_updatePurge = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_updatePurge_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.purgeNotFound) {
    return callback(result.purgeNotFound);
  }
  if (null !== result.documentNotInPurge) {
    return callback(result.documentNotInPurge);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.removeDocumentAgeOffRuleInheritance = function(securityToken, documentId, documentUri, parentId, parentUri, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_removeDocumentAgeOffRuleInheritance(securityToken, documentId, documentUri, parentId, parentUri);
};

ProvenanceServiceClient.prototype.send_removeDocumentAgeOffRuleInheritance = function(securityToken, documentId, documentUri, parentId, parentUri) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('removeDocumentAgeOffRuleInheritance', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_removeDocumentAgeOffRuleInheritance_args();
  args.securityToken = securityToken;
  args.documentId = documentId;
  args.documentUri = documentUri;
  args.parentId = parentId;
  args.parentUri = parentUri;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_removeDocumentAgeOffRuleInheritance = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_removeDocumentAgeOffRuleInheritance_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentNotFound) {
    return callback(result.documentNotFound);
  }
  if (null !== result.alreadyAged) {
    return callback(result.alreadyAged);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.removeDocumentExplicitAgeOffRule = function(securityToken, documentId, documentUri, ageOffRuleId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_removeDocumentExplicitAgeOffRule(securityToken, documentId, documentUri, ageOffRuleId);
};

ProvenanceServiceClient.prototype.send_removeDocumentExplicitAgeOffRule = function(securityToken, documentId, documentUri, ageOffRuleId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('removeDocumentExplicitAgeOffRule', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_removeDocumentExplicitAgeOffRule_args();
  args.securityToken = securityToken;
  args.documentId = documentId;
  args.documentUri = documentUri;
  args.ageOffRuleId = ageOffRuleId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_removeDocumentExplicitAgeOffRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_removeDocumentExplicitAgeOffRule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentNotFound) {
    return callback(result.documentNotFound);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.alreadyAged) {
    return callback(result.alreadyAged);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.addDocumentExplicitAgeOffRule = function(securityToken, documentId, documentUri, ageOffMapping, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_addDocumentExplicitAgeOffRule(securityToken, documentId, documentUri, ageOffMapping);
};

ProvenanceServiceClient.prototype.send_addDocumentExplicitAgeOffRule = function(securityToken, documentId, documentUri, ageOffMapping) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addDocumentExplicitAgeOffRule', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_addDocumentExplicitAgeOffRule_args();
  args.securityToken = securityToken;
  args.documentId = documentId;
  args.documentUri = documentUri;
  args.ageOffMapping = ageOffMapping;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_addDocumentExplicitAgeOffRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_addDocumentExplicitAgeOffRule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentNotFound) {
    return callback(result.documentNotFound);
  }
  if (null !== result.ruleNotFound) {
    return callback(result.ruleNotFound);
  }
  if (null !== result.alreadyAged) {
    return callback(result.alreadyAged);
  }
  if (null !== result.edgeExists) {
    return callback(result.edgeExists);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.addDocumentInheritanceInfo = function(securityToken, documentId, documentUri, inheritanceInfo, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_addDocumentInheritanceInfo(securityToken, documentId, documentUri, inheritanceInfo);
};

ProvenanceServiceClient.prototype.send_addDocumentInheritanceInfo = function(securityToken, documentId, documentUri, inheritanceInfo) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addDocumentInheritanceInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_addDocumentInheritanceInfo_args();
  args.securityToken = securityToken;
  args.documentId = documentId;
  args.documentUri = documentUri;
  args.inheritanceInfo = inheritanceInfo;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_addDocumentInheritanceInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_addDocumentInheritanceInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.documentNotFound) {
    return callback(result.documentNotFound);
  }
  if (null !== result.circularInheritance) {
    return callback(result.circularInheritance);
  }
  if (null !== result.alreadyAged) {
    return callback(result.alreadyAged);
  }
  if (null !== result.inheritanceExists) {
    return callback(result.inheritanceExists);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.recordObjectAccess = function(securityToken, documentUri, accessType, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_recordObjectAccess(securityToken, documentUri, accessType);
};

ProvenanceServiceClient.prototype.send_recordObjectAccess = function(securityToken, documentUri, accessType) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('recordObjectAccess', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_recordObjectAccess_args();
  args.securityToken = securityToken;
  args.documentUri = documentUri;
  args.accessType = accessType;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_recordObjectAccess = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_recordObjectAccess_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  callback(null)
};
ProvenanceServiceClient.prototype.fetchUsersDocuments = function(securityToken, userPrincipal, startDateTime, stopDateTime, numToFetch, continuationPoint, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_fetchUsersDocuments(securityToken, userPrincipal, startDateTime, stopDateTime, numToFetch, continuationPoint);
};

ProvenanceServiceClient.prototype.send_fetchUsersDocuments = function(securityToken, userPrincipal, startDateTime, stopDateTime, numToFetch, continuationPoint) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('fetchUsersDocuments', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_fetchUsersDocuments_args();
  args.securityToken = securityToken;
  args.userPrincipal = userPrincipal;
  args.startDateTime = startDateTime;
  args.stopDateTime = stopDateTime;
  args.numToFetch = numToFetch;
  args.continuationPoint = continuationPoint;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_fetchUsersDocuments = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_fetchUsersDocuments_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('fetchUsersDocuments failed: unknown result');
};
ProvenanceServiceClient.prototype.fetchDocumentUsers = function(securityToken, documentUri, startDateTime, stopDateTime, numToFetch, continuationPoint, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_fetchDocumentUsers(securityToken, documentUri, startDateTime, stopDateTime, numToFetch, continuationPoint);
};

ProvenanceServiceClient.prototype.send_fetchDocumentUsers = function(securityToken, documentUri, startDateTime, stopDateTime, numToFetch, continuationPoint) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('fetchDocumentUsers', Thrift.MessageType.CALL, this.seqid);
  var args = new ProvenanceService_fetchDocumentUsers_args();
  args.securityToken = securityToken;
  args.documentUri = documentUri;
  args.startDateTime = startDateTime;
  args.stopDateTime = stopDateTime;
  args.numToFetch = numToFetch;
  args.continuationPoint = continuationPoint;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ProvenanceServiceClient.prototype.recv_fetchDocumentUsers = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ProvenanceService_fetchDocumentUsers_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.security) {
    return callback(result.security);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('fetchDocumentUsers failed: unknown result');
};
ProvenanceServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
Thrift.inherits(ProvenanceServiceProcessor, EzBakeBaseServiceProcessor)
ProvenanceServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.Exception, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

ProvenanceServiceProcessor.prototype.process_addAgeOffRule = function(seqid, input, output) {
  var args = new ProvenanceService_addAgeOffRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.addAgeOffRule(args.securityToken, args.name, args.retentionDurationSeconds, args.maximumExecutionPeriod, function (err, result) {
    var result = new ProvenanceService_addAgeOffRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("addAgeOffRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getAgeOffRuleById = function(seqid, input, output) {
  var args = new ProvenanceService_getAgeOffRuleById_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getAgeOffRuleById(args.securityToken, args.ruleId, function (err, result) {
    var result = new ProvenanceService_getAgeOffRuleById_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getAgeOffRuleById", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getAgeOffRule = function(seqid, input, output) {
  var args = new ProvenanceService_getAgeOffRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getAgeOffRule(args.securityToken, args.name, function (err, result) {
    var result = new ProvenanceService_getAgeOffRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getAgeOffRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_updateAgeOffRule = function(seqid, input, output) {
  var args = new ProvenanceService_updateAgeOffRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.updateAgeOffRule(args.securityToken, args.name, args.retentionDurationSeconds, function (err, result) {
    var result = new ProvenanceService_updateAgeOffRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("updateAgeOffRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getAllAgeOffRules = function(seqid, input, output) {
  var args = new ProvenanceService_getAllAgeOffRules_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getAllAgeOffRules(args.securityToken, args.limit, args.page, function (err, result) {
    var result = new ProvenanceService_getAllAgeOffRules_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getAllAgeOffRules", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_countAgeOffRules = function(seqid, input, output) {
  var args = new ProvenanceService_countAgeOffRules_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.countAgeOffRules(args.securityToken, function (err, result) {
    var result = new ProvenanceService_countAgeOffRules_result((err != null ? err : {success: result}));
    output.writeMessageBegin("countAgeOffRules", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_addDocument = function(seqid, input, output) {
  var args = new ProvenanceService_addDocument_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.addDocument(args.token, args.uri, args.parents, args.ageOffRules, function (err, result) {
    var result = new ProvenanceService_addDocument_result((err != null ? err : {success: result}));
    output.writeMessageBegin("addDocument", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_addDocuments = function(seqid, input, output) {
  var args = new ProvenanceService_addDocuments_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.addDocuments(args.securityToken, args.documents, args.ageOffRules, function (err, result) {
    var result = new ProvenanceService_addDocuments_result((err != null ? err : {success: result}));
    output.writeMessageBegin("addDocuments", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getAddDocumentsMaxSize = function(seqid, input, output) {
  var args = new ProvenanceService_getAddDocumentsMaxSize_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getAddDocumentsMaxSize(args.securityToken, function (err, result) {
    var result = new ProvenanceService_getAddDocumentsMaxSize_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getAddDocumentsMaxSize", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_startAgeOffEvent = function(seqid, input, output) {
  var args = new ProvenanceService_startAgeOffEvent_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.startAgeOffEvent(args.securityToken, args.ruleId, args.effectiveTime, function (err, result) {
    var result = new ProvenanceService_startAgeOffEvent_result((err != null ? err : {success: result}));
    output.writeMessageBegin("startAgeOffEvent", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_markDocumentAsAged = function(seqid, input, output) {
  var args = new ProvenanceService_markDocumentAsAged_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.markDocumentAsAged(args.securityToken, args.agedDocumentIds, function (err, result) {
    var result = new ProvenanceService_markDocumentAsAged_result((err != null ? err : {success: result}));
    output.writeMessageBegin("markDocumentAsAged", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentInfo = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentInfo(args.securityToken, args.id, args.uri, function (err, result) {
    var result = new ProvenanceService_getDocumentInfo_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentInfo", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentAncestors = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentAncestors_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentAncestors(args.securityToken, args.uris, function (err, result) {
    var result = new ProvenanceService_getDocumentAncestors_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentAncestors", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentDescendants = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentDescendants_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentDescendants(args.securityToken, args.uris, function (err, result) {
    var result = new ProvenanceService_getDocumentDescendants_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentDescendants", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_markDocumentForPurge = function(seqid, input, output) {
  var args = new ProvenanceService_markDocumentForPurge_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.markDocumentForPurge(args.securityToken, args.uris, args.name, args.description, function (err, result) {
    var result = new ProvenanceService_markDocumentForPurge_result((err != null ? err : {success: result}));
    output.writeMessageBegin("markDocumentForPurge", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentUriFromId = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentUriFromId_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentUriFromId(args.securityToken, args.positionsList, function (err, result) {
    var result = new ProvenanceService_getDocumentUriFromId_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentUriFromId", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentConvertedUrisFromIds = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentConvertedUrisFromIds_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentConvertedUrisFromIds(args.securityToken, args.ids, function (err, result) {
    var result = new ProvenanceService_getDocumentConvertedUrisFromIds_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentConvertedUrisFromIds", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getDocumentConvertedUrisFromUris = function(seqid, input, output) {
  var args = new ProvenanceService_getDocumentConvertedUrisFromUris_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDocumentConvertedUrisFromUris(args.securityToken, args.uris, function (err, result) {
    var result = new ProvenanceService_getDocumentConvertedUrisFromUris_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDocumentConvertedUrisFromUris", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getPurgeInfo = function(seqid, input, output) {
  var args = new ProvenanceService_getPurgeInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getPurgeInfo(args.securityToken, args.purgeId, function (err, result) {
    var result = new ProvenanceService_getPurgeInfo_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getPurgeInfo", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_getAllPurgeIds = function(seqid, input, output) {
  var args = new ProvenanceService_getAllPurgeIds_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getAllPurgeIds(args.securityToken, function (err, result) {
    var result = new ProvenanceService_getAllPurgeIds_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getAllPurgeIds", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_updatePurge = function(seqid, input, output) {
  var args = new ProvenanceService_updatePurge_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.updatePurge(args.securityToken, args.purgeId, args.completelyPurged, args.note, args.resolved, function (err, result) {
    var result = new ProvenanceService_updatePurge_result((err != null ? err : {success: result}));
    output.writeMessageBegin("updatePurge", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_removeDocumentAgeOffRuleInheritance = function(seqid, input, output) {
  var args = new ProvenanceService_removeDocumentAgeOffRuleInheritance_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.removeDocumentAgeOffRuleInheritance(args.securityToken, args.documentId, args.documentUri, args.parentId, args.parentUri, function (err, result) {
    var result = new ProvenanceService_removeDocumentAgeOffRuleInheritance_result((err != null ? err : {success: result}));
    output.writeMessageBegin("removeDocumentAgeOffRuleInheritance", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_removeDocumentExplicitAgeOffRule = function(seqid, input, output) {
  var args = new ProvenanceService_removeDocumentExplicitAgeOffRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.removeDocumentExplicitAgeOffRule(args.securityToken, args.documentId, args.documentUri, args.ageOffRuleId, function (err, result) {
    var result = new ProvenanceService_removeDocumentExplicitAgeOffRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("removeDocumentExplicitAgeOffRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_addDocumentExplicitAgeOffRule = function(seqid, input, output) {
  var args = new ProvenanceService_addDocumentExplicitAgeOffRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.addDocumentExplicitAgeOffRule(args.securityToken, args.documentId, args.documentUri, args.ageOffMapping, function (err, result) {
    var result = new ProvenanceService_addDocumentExplicitAgeOffRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("addDocumentExplicitAgeOffRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_addDocumentInheritanceInfo = function(seqid, input, output) {
  var args = new ProvenanceService_addDocumentInheritanceInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.addDocumentInheritanceInfo(args.securityToken, args.documentId, args.documentUri, args.inheritanceInfo, function (err, result) {
    var result = new ProvenanceService_addDocumentInheritanceInfo_result((err != null ? err : {success: result}));
    output.writeMessageBegin("addDocumentInheritanceInfo", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_recordObjectAccess = function(seqid, input, output) {
  var args = new ProvenanceService_recordObjectAccess_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.recordObjectAccess(args.securityToken, args.documentUri, args.accessType, function (err, result) {
    var result = new ProvenanceService_recordObjectAccess_result((err != null ? err : {success: result}));
    output.writeMessageBegin("recordObjectAccess", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_fetchUsersDocuments = function(seqid, input, output) {
  var args = new ProvenanceService_fetchUsersDocuments_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.fetchUsersDocuments(args.securityToken, args.userPrincipal, args.startDateTime, args.stopDateTime, args.numToFetch, args.continuationPoint, function (err, result) {
    var result = new ProvenanceService_fetchUsersDocuments_result((err != null ? err : {success: result}));
    output.writeMessageBegin("fetchUsersDocuments", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

ProvenanceServiceProcessor.prototype.process_fetchDocumentUsers = function(seqid, input, output) {
  var args = new ProvenanceService_fetchDocumentUsers_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.fetchDocumentUsers(args.securityToken, args.documentUri, args.startDateTime, args.stopDateTime, args.numToFetch, args.continuationPoint, function (err, result) {
    var result = new ProvenanceService_fetchDocumentUsers_result((err != null ? err : {success: result}));
    output.writeMessageBegin("fetchDocumentUsers", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

