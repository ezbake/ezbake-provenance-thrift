/*   Copyright (C) 2013-2014 Computer Sciences Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ezbakeBaseTypes_ttypes = require('./ezbakeBaseTypes_types')
var ezbakeBaseService_ttypes = require('./ezbakeBaseService_types')


var ttypes = module.exports = {};
ttypes.AddDocumentStatus = {
'SUCCESS' : 0,
'ALREADY_EXISTS' : 1,
'PARENT_NOT_FOUND' : 2,
'CIRCULAR_INHERITANCE_NOT_ALLOWED' : 3,
'UNKNOWN_ERROR' : 4
};
ttypes.ObjectAccessType = {
'CREATE' : 0,
'READ' : 1,
'WRITE' : 2,
'MANAGE' : 3,
'DELETE' : 4
};
InheritanceInfo = module.exports.InheritanceInfo = function(args) {
  this.parentUri = null;
  this.inheritParentAgeOff = null;
  this.trackParentAgeOff = null;
  this.ageOffRelevantDateTime = null;
  if (args) {
    if (args.parentUri !== undefined) {
      this.parentUri = args.parentUri;
    }
    if (args.inheritParentAgeOff !== undefined) {
      this.inheritParentAgeOff = args.inheritParentAgeOff;
    }
    if (args.trackParentAgeOff !== undefined) {
      this.trackParentAgeOff = args.trackParentAgeOff;
    }
    if (args.ageOffRelevantDateTime !== undefined) {
      this.ageOffRelevantDateTime = args.ageOffRelevantDateTime;
    }
  }
};
InheritanceInfo.prototype = {};
InheritanceInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.parentUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.inheritParentAgeOff = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.trackParentAgeOff = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ageOffRelevantDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.ageOffRelevantDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InheritanceInfo.prototype.write = function(output) {
  output.writeStructBegin('InheritanceInfo');
  if (this.parentUri !== null && this.parentUri !== undefined) {
    output.writeFieldBegin('parentUri', Thrift.Type.STRING, 1);
    output.writeString(this.parentUri);
    output.writeFieldEnd();
  }
  if (this.inheritParentAgeOff !== null && this.inheritParentAgeOff !== undefined) {
    output.writeFieldBegin('inheritParentAgeOff', Thrift.Type.BOOL, 2);
    output.writeBool(this.inheritParentAgeOff);
    output.writeFieldEnd();
  }
  if (this.trackParentAgeOff !== null && this.trackParentAgeOff !== undefined) {
    output.writeFieldBegin('trackParentAgeOff', Thrift.Type.BOOL, 3);
    output.writeBool(this.trackParentAgeOff);
    output.writeFieldEnd();
  }
  if (this.ageOffRelevantDateTime !== null && this.ageOffRelevantDateTime !== undefined) {
    output.writeFieldBegin('ageOffRelevantDateTime', Thrift.Type.STRUCT, 4);
    this.ageOffRelevantDateTime.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AccumuloContinuationPoint = module.exports.AccumuloContinuationPoint = function(args) {
  this.startAtBeginning = null;
  this.rowId = null;
  this.colFam = null;
  this.colQual = null;
  if (args) {
    if (args.startAtBeginning !== undefined) {
      this.startAtBeginning = args.startAtBeginning;
    }
    if (args.rowId !== undefined) {
      this.rowId = args.rowId;
    }
    if (args.colFam !== undefined) {
      this.colFam = args.colFam;
    }
    if (args.colQual !== undefined) {
      this.colQual = args.colQual;
    }
  }
};
AccumuloContinuationPoint.prototype = {};
AccumuloContinuationPoint.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.startAtBeginning = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.rowId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.colFam = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.colQual = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AccumuloContinuationPoint.prototype.write = function(output) {
  output.writeStructBegin('AccumuloContinuationPoint');
  if (this.startAtBeginning !== null && this.startAtBeginning !== undefined) {
    output.writeFieldBegin('startAtBeginning', Thrift.Type.BOOL, 1);
    output.writeBool(this.startAtBeginning);
    output.writeFieldEnd();
  }
  if (this.rowId !== null && this.rowId !== undefined) {
    output.writeFieldBegin('rowId', Thrift.Type.STRING, 2);
    output.writeString(this.rowId);
    output.writeFieldEnd();
  }
  if (this.colFam !== null && this.colFam !== undefined) {
    output.writeFieldBegin('colFam', Thrift.Type.STRING, 3);
    output.writeString(this.colFam);
    output.writeFieldEnd();
  }
  if (this.colQual !== null && this.colQual !== undefined) {
    output.writeFieldBegin('colQual', Thrift.Type.STRING, 4);
    output.writeString(this.colQual);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ResultsAndContinuation = module.exports.ResultsAndContinuation = function(args) {
  this.results = null;
  this.continuationPoint = null;
  if (args) {
    if (args.results !== undefined) {
      this.results = args.results;
    }
    if (args.continuationPoint !== undefined) {
      this.continuationPoint = args.continuationPoint;
    }
  }
};
ResultsAndContinuation.prototype = {};
ResultsAndContinuation.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.results = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readString();
          this.results.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.continuationPoint = new ttypes.AccumuloContinuationPoint();
        this.continuationPoint.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResultsAndContinuation.prototype.write = function(output) {
  output.writeStructBegin('ResultsAndContinuation');
  if (this.results !== null && this.results !== undefined) {
    output.writeFieldBegin('results', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.results.length);
    for (var iter7 in this.results)
    {
      if (this.results.hasOwnProperty(iter7))
      {
        iter7 = this.results[iter7];
        output.writeString(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.continuationPoint !== null && this.continuationPoint !== undefined) {
    output.writeFieldBegin('continuationPoint', Thrift.Type.STRUCT, 2);
    this.continuationPoint.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AgeOffMapping = module.exports.AgeOffMapping = function(args) {
  this.ruleId = null;
  this.ageOffRelevantDateTime = null;
  if (args) {
    if (args.ruleId !== undefined) {
      this.ruleId = args.ruleId;
    }
    if (args.ageOffRelevantDateTime !== undefined) {
      this.ageOffRelevantDateTime = args.ageOffRelevantDateTime;
    }
  }
};
AgeOffMapping.prototype = {};
AgeOffMapping.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.ruleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ageOffRelevantDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.ageOffRelevantDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AgeOffMapping.prototype.write = function(output) {
  output.writeStructBegin('AgeOffMapping');
  if (this.ruleId !== null && this.ruleId !== undefined) {
    output.writeFieldBegin('ruleId', Thrift.Type.I64, 1);
    output.writeI64(this.ruleId);
    output.writeFieldEnd();
  }
  if (this.ageOffRelevantDateTime !== null && this.ageOffRelevantDateTime !== undefined) {
    output.writeFieldBegin('ageOffRelevantDateTime', Thrift.Type.STRUCT, 2);
    this.ageOffRelevantDateTime.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

DerivedResult = module.exports.DerivedResult = function(args) {
  this.derivedDocs = null;
  this.urisNotFound = null;
  this.immediateChildren = null;
  if (args) {
    if (args.derivedDocs !== undefined) {
      this.derivedDocs = args.derivedDocs;
    }
    if (args.urisNotFound !== undefined) {
      this.urisNotFound = args.urisNotFound;
    }
    if (args.immediateChildren !== undefined) {
      this.immediateChildren = args.immediateChildren;
    }
  }
};
DerivedResult.prototype = {};
DerivedResult.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size8 = 0;
        var _rtmp312;
        this.derivedDocs = [];
        var _etype11 = 0;
        _rtmp312 = input.readSetBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = input.readI64();
          this.derivedDocs.push(elem14);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size15 = 0;
        var _rtmp319;
        this.urisNotFound = [];
        var _etype18 = 0;
        _rtmp319 = input.readListBegin();
        _etype18 = _rtmp319.etype;
        _size15 = _rtmp319.size;
        for (var _i20 = 0; _i20 < _size15; ++_i20)
        {
          var elem21 = null;
          elem21 = input.readString();
          this.urisNotFound.push(elem21);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size22 = 0;
        var _rtmp326;
        this.immediateChildren = [];
        var _etype25 = 0;
        _rtmp326 = input.readListBegin();
        _etype25 = _rtmp326.etype;
        _size22 = _rtmp326.size;
        for (var _i27 = 0; _i27 < _size22; ++_i27)
        {
          var elem28 = null;
          elem28 = input.readI64();
          this.immediateChildren.push(elem28);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DerivedResult.prototype.write = function(output) {
  output.writeStructBegin('DerivedResult');
  if (this.derivedDocs !== null && this.derivedDocs !== undefined) {
    output.writeFieldBegin('derivedDocs', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.I64, this.derivedDocs.length);
    for (var iter29 in this.derivedDocs)
    {
      if (this.derivedDocs.hasOwnProperty(iter29))
      {
        iter29 = this.derivedDocs[iter29];
        output.writeI64(iter29);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.urisNotFound !== null && this.urisNotFound !== undefined) {
    output.writeFieldBegin('urisNotFound', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.urisNotFound.length);
    for (var iter30 in this.urisNotFound)
    {
      if (this.urisNotFound.hasOwnProperty(iter30))
      {
        iter30 = this.urisNotFound[iter30];
        output.writeString(iter30);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.immediateChildren !== null && this.immediateChildren !== undefined) {
    output.writeFieldBegin('immediateChildren', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I64, this.immediateChildren.length);
    for (var iter31 in this.immediateChildren)
    {
      if (this.immediateChildren.hasOwnProperty(iter31))
      {
        iter31 = this.immediateChildren[iter31];
        output.writeI64(iter31);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

DocumentAgeOffInfo = module.exports.DocumentAgeOffInfo = function(args) {
  this.ruleId = null;
  this.ageOffRelevantDateTime = null;
  this.maximumExecutionPeriod = null;
  this.timeStamp = null;
  this.application = null;
  this.user = null;
  this.inherited = null;
  this.inheritedFromId = null;
  this.inheritedFromUri = null;
  if (args) {
    if (args.ruleId !== undefined) {
      this.ruleId = args.ruleId;
    }
    if (args.ageOffRelevantDateTime !== undefined) {
      this.ageOffRelevantDateTime = args.ageOffRelevantDateTime;
    }
    if (args.maximumExecutionPeriod !== undefined) {
      this.maximumExecutionPeriod = args.maximumExecutionPeriod;
    }
    if (args.timeStamp !== undefined) {
      this.timeStamp = args.timeStamp;
    }
    if (args.application !== undefined) {
      this.application = args.application;
    }
    if (args.user !== undefined) {
      this.user = args.user;
    }
    if (args.inherited !== undefined) {
      this.inherited = args.inherited;
    }
    if (args.inheritedFromId !== undefined) {
      this.inheritedFromId = args.inheritedFromId;
    }
    if (args.inheritedFromUri !== undefined) {
      this.inheritedFromUri = args.inheritedFromUri;
    }
  }
};
DocumentAgeOffInfo.prototype = {};
DocumentAgeOffInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.ruleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ageOffRelevantDateTime = new ezbakeBaseTypes_ttypes.DateTime();
        this.ageOffRelevantDateTime.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.maximumExecutionPeriod = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.timeStamp = new ezbakeBaseTypes_ttypes.DateTime();
        this.timeStamp.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.application = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.BOOL) {
        this.inherited = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I64) {
        this.inheritedFromId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.inheritedFromUri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DocumentAgeOffInfo.prototype.write = function(output) {
  output.writeStructBegin('DocumentAgeOffInfo');
  if (this.ruleId !== null && this.ruleId !== undefined) {
    output.writeFieldBegin('ruleId', Thrift.Type.I64, 1);
    output.writeI64(this.ruleId);
    output.writeFieldEnd();
  }
  if (this.ageOffRelevantDateTime !== null && this.ageOffRelevantDateTime !== undefined) {
    output.writeFieldBegin('ageOffRelevantDateTime', Thrift.Type.STRUCT, 2);
    this.ageOffRelevantDateTime.write(output);
    output.writeFieldEnd();
  }
  if (this.maximumExecutionPeriod !== null && this.maximumExecutionPeriod !== undefined) {
    output.writeFieldBegin('maximumExecutionPeriod', Thrift.Type.I32, 3);
    output.writeI32(this.maximumExecutionPeriod);
    output.writeFieldEnd();
  }
  if (this.timeStamp !== null && this.timeStamp !== undefined) {
    output.writeFieldBegin('timeStamp', Thrift.Type.STRUCT, 4);
    this.timeStamp.write(output);
    output.writeFieldEnd();
  }
  if (this.application !== null && this.application !== undefined) {
    output.writeFieldBegin('application', Thrift.Type.STRING, 5);
    output.writeString(this.application);
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 6);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  if (this.inherited !== null && this.inherited !== undefined) {
    output.writeFieldBegin('inherited', Thrift.Type.BOOL, 7);
    output.writeBool(this.inherited);
    output.writeFieldEnd();
  }
  if (this.inheritedFromId !== null && this.inheritedFromId !== undefined) {
    output.writeFieldBegin('inheritedFromId', Thrift.Type.I64, 8);
    output.writeI64(this.inheritedFromId);
    output.writeFieldEnd();
  }
  if (this.inheritedFromUri !== null && this.inheritedFromUri !== undefined) {
    output.writeFieldBegin('inheritedFromUri', Thrift.Type.STRING, 9);
    output.writeString(this.inheritedFromUri);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

DocumentInfo = module.exports.DocumentInfo = function(args) {
  this.uri = null;
  this.documentId = null;
  this.application = null;
  this.timeStamp = null;
  this.user = null;
  this.parents = null;
  this.children = null;
  this.ageOffInfo = null;
  this.aged = null;
  if (args) {
    if (args.uri !== undefined) {
      this.uri = args.uri;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.application !== undefined) {
      this.application = args.application;
    }
    if (args.timeStamp !== undefined) {
      this.timeStamp = args.timeStamp;
    }
    if (args.user !== undefined) {
      this.user = args.user;
    }
    if (args.parents !== undefined) {
      this.parents = args.parents;
    }
    if (args.children !== undefined) {
      this.children = args.children;
    }
    if (args.ageOffInfo !== undefined) {
      this.ageOffInfo = args.ageOffInfo;
    }
    if (args.aged !== undefined) {
      this.aged = args.aged;
    }
  }
};
DocumentInfo.prototype = {};
DocumentInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.application = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.timeStamp = new ezbakeBaseTypes_ttypes.DateTime();
        this.timeStamp.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.parents = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          var _size39 = 0;
          var _rtmp343;
          elem38 = {};
          var _ktype40 = 0;
          var _vtype41 = 0;
          _rtmp343 = input.readMapBegin();
          _ktype40 = _rtmp343.ktype;
          _vtype41 = _rtmp343.vtype;
          _size39 = _rtmp343.size;
          for (var _i44 = 0; _i44 < _size39; ++_i44)
          {
            var key45 = null;
            var val46 = null;
            key45 = input.readI64();
            val46 = input.readString();
            elem38[key45] = val46;
          }
          input.readMapEnd();
          this.parents.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.LIST) {
        var _size47 = 0;
        var _rtmp351;
        this.children = [];
        var _etype50 = 0;
        _rtmp351 = input.readListBegin();
        _etype50 = _rtmp351.etype;
        _size47 = _rtmp351.size;
        for (var _i52 = 0; _i52 < _size47; ++_i52)
        {
          var elem53 = null;
          var _size54 = 0;
          var _rtmp358;
          elem53 = {};
          var _ktype55 = 0;
          var _vtype56 = 0;
          _rtmp358 = input.readMapBegin();
          _ktype55 = _rtmp358.ktype;
          _vtype56 = _rtmp358.vtype;
          _size54 = _rtmp358.size;
          for (var _i59 = 0; _i59 < _size54; ++_i59)
          {
            var key60 = null;
            var val61 = null;
            key60 = input.readI64();
            val61 = input.readString();
            elem53[key60] = val61;
          }
          input.readMapEnd();
          this.children.push(elem53);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.LIST) {
        var _size62 = 0;
        var _rtmp366;
        this.ageOffInfo = [];
        var _etype65 = 0;
        _rtmp366 = input.readListBegin();
        _etype65 = _rtmp366.etype;
        _size62 = _rtmp366.size;
        for (var _i67 = 0; _i67 < _size62; ++_i67)
        {
          var elem68 = null;
          elem68 = new ttypes.DocumentAgeOffInfo();
          elem68.read(input);
          this.ageOffInfo.push(elem68);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.BOOL) {
        this.aged = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DocumentInfo.prototype.write = function(output) {
  output.writeStructBegin('DocumentInfo');
  if (this.uri !== null && this.uri !== undefined) {
    output.writeFieldBegin('uri', Thrift.Type.STRING, 1);
    output.writeString(this.uri);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.application !== null && this.application !== undefined) {
    output.writeFieldBegin('application', Thrift.Type.STRING, 3);
    output.writeString(this.application);
    output.writeFieldEnd();
  }
  if (this.timeStamp !== null && this.timeStamp !== undefined) {
    output.writeFieldBegin('timeStamp', Thrift.Type.STRUCT, 4);
    this.timeStamp.write(output);
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 5);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  if (this.parents !== null && this.parents !== undefined) {
    output.writeFieldBegin('parents', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.MAP, this.parents.length);
    for (var iter69 in this.parents)
    {
      if (this.parents.hasOwnProperty(iter69))
      {
        iter69 = this.parents[iter69];
        output.writeMapBegin(Thrift.Type.I64, Thrift.Type.STRING, Thrift.objectLength(iter69));
        for (var kiter70 in iter69)
        {
          if (iter69.hasOwnProperty(kiter70))
          {
            var viter71 = iter69[kiter70];
            output.writeI64(kiter70);
            output.writeString(viter71);
          }
        }
        output.writeMapEnd();
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.children !== null && this.children !== undefined) {
    output.writeFieldBegin('children', Thrift.Type.LIST, 7);
    output.writeListBegin(Thrift.Type.MAP, this.children.length);
    for (var iter72 in this.children)
    {
      if (this.children.hasOwnProperty(iter72))
      {
        iter72 = this.children[iter72];
        output.writeMapBegin(Thrift.Type.I64, Thrift.Type.STRING, Thrift.objectLength(iter72));
        for (var kiter73 in iter72)
        {
          if (iter72.hasOwnProperty(kiter73))
          {
            var viter74 = iter72[kiter73];
            output.writeI64(kiter73);
            output.writeString(viter74);
          }
        }
        output.writeMapEnd();
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ageOffInfo !== null && this.ageOffInfo !== undefined) {
    output.writeFieldBegin('ageOffInfo', Thrift.Type.LIST, 8);
    output.writeListBegin(Thrift.Type.STRUCT, this.ageOffInfo.length);
    for (var iter75 in this.ageOffInfo)
    {
      if (this.ageOffInfo.hasOwnProperty(iter75))
      {
        iter75 = this.ageOffInfo[iter75];
        iter75.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.aged !== null && this.aged !== undefined) {
    output.writeFieldBegin('aged', Thrift.Type.BOOL, 9);
    output.writeBool(this.aged);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ConversionResult = module.exports.ConversionResult = function(args) {
  this.convertedUris = null;
  this.urisNotFound = null;
  this.idsNotFound = null;
  if (args) {
    if (args.convertedUris !== undefined) {
      this.convertedUris = args.convertedUris;
    }
    if (args.urisNotFound !== undefined) {
      this.urisNotFound = args.urisNotFound;
    }
    if (args.idsNotFound !== undefined) {
      this.idsNotFound = args.idsNotFound;
    }
  }
};
ConversionResult.prototype = {};
ConversionResult.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size76 = 0;
        var _rtmp380;
        this.convertedUris = [];
        var _etype79 = 0;
        _rtmp380 = input.readListBegin();
        _etype79 = _rtmp380.etype;
        _size76 = _rtmp380.size;
        for (var _i81 = 0; _i81 < _size76; ++_i81)
        {
          var elem82 = null;
          elem82 = input.readI64();
          this.convertedUris.push(elem82);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size83 = 0;
        var _rtmp387;
        this.urisNotFound = [];
        var _etype86 = 0;
        _rtmp387 = input.readListBegin();
        _etype86 = _rtmp387.etype;
        _size83 = _rtmp387.size;
        for (var _i88 = 0; _i88 < _size83; ++_i88)
        {
          var elem89 = null;
          elem89 = input.readString();
          this.urisNotFound.push(elem89);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size90 = 0;
        var _rtmp394;
        this.idsNotFound = [];
        var _etype93 = 0;
        _rtmp394 = input.readListBegin();
        _etype93 = _rtmp394.etype;
        _size90 = _rtmp394.size;
        for (var _i95 = 0; _i95 < _size90; ++_i95)
        {
          var elem96 = null;
          elem96 = input.readI64();
          this.idsNotFound.push(elem96);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ConversionResult.prototype.write = function(output) {
  output.writeStructBegin('ConversionResult');
  if (this.convertedUris !== null && this.convertedUris !== undefined) {
    output.writeFieldBegin('convertedUris', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I64, this.convertedUris.length);
    for (var iter97 in this.convertedUris)
    {
      if (this.convertedUris.hasOwnProperty(iter97))
      {
        iter97 = this.convertedUris[iter97];
        output.writeI64(iter97);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.urisNotFound !== null && this.urisNotFound !== undefined) {
    output.writeFieldBegin('urisNotFound', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.urisNotFound.length);
    for (var iter98 in this.urisNotFound)
    {
      if (this.urisNotFound.hasOwnProperty(iter98))
      {
        iter98 = this.urisNotFound[iter98];
        output.writeString(iter98);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.idsNotFound !== null && this.idsNotFound !== undefined) {
    output.writeFieldBegin('idsNotFound', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I64, this.idsNotFound.length);
    for (var iter99 in this.idsNotFound)
    {
      if (this.idsNotFound.hasOwnProperty(iter99))
      {
        iter99 = this.idsNotFound[iter99];
        output.writeI64(iter99);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AgeOffInitiationResult = module.exports.AgeOffInitiationResult = function(args) {
  this.ageOffId = null;
  this.ageOffDocumentIds = null;
  if (args) {
    if (args.ageOffId !== undefined) {
      this.ageOffId = args.ageOffId;
    }
    if (args.ageOffDocumentIds !== undefined) {
      this.ageOffDocumentIds = args.ageOffDocumentIds;
    }
  }
};
AgeOffInitiationResult.prototype = {};
AgeOffInitiationResult.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.ageOffId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size100 = 0;
        var _rtmp3104;
        this.ageOffDocumentIds = [];
        var _etype103 = 0;
        _rtmp3104 = input.readSetBegin();
        _etype103 = _rtmp3104.etype;
        _size100 = _rtmp3104.size;
        for (var _i105 = 0; _i105 < _size100; ++_i105)
        {
          var elem106 = null;
          elem106 = input.readI64();
          this.ageOffDocumentIds.push(elem106);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AgeOffInitiationResult.prototype.write = function(output) {
  output.writeStructBegin('AgeOffInitiationResult');
  if (this.ageOffId !== null && this.ageOffId !== undefined) {
    output.writeFieldBegin('ageOffId', Thrift.Type.I64, 1);
    output.writeI64(this.ageOffId);
    output.writeFieldEnd();
  }
  if (this.ageOffDocumentIds !== null && this.ageOffDocumentIds !== undefined) {
    output.writeFieldBegin('ageOffDocumentIds', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.I64, this.ageOffDocumentIds.length);
    for (var iter107 in this.ageOffDocumentIds)
    {
      if (this.ageOffDocumentIds.hasOwnProperty(iter107))
      {
        iter107 = this.ageOffDocumentIds[iter107];
        output.writeI64(iter107);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

PurgeInitiationResult = module.exports.PurgeInitiationResult = function(args) {
  this.toBePurged = null;
  this.urisNotFound = null;
  this.purgeId = null;
  if (args) {
    if (args.toBePurged !== undefined) {
      this.toBePurged = args.toBePurged;
    }
    if (args.urisNotFound !== undefined) {
      this.urisNotFound = args.urisNotFound;
    }
    if (args.purgeId !== undefined) {
      this.purgeId = args.purgeId;
    }
  }
};
PurgeInitiationResult.prototype = {};
PurgeInitiationResult.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size108 = 0;
        var _rtmp3112;
        this.toBePurged = [];
        var _etype111 = 0;
        _rtmp3112 = input.readSetBegin();
        _etype111 = _rtmp3112.etype;
        _size108 = _rtmp3112.size;
        for (var _i113 = 0; _i113 < _size108; ++_i113)
        {
          var elem114 = null;
          elem114 = input.readI64();
          this.toBePurged.push(elem114);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size115 = 0;
        var _rtmp3119;
        this.urisNotFound = [];
        var _etype118 = 0;
        _rtmp3119 = input.readListBegin();
        _etype118 = _rtmp3119.etype;
        _size115 = _rtmp3119.size;
        for (var _i120 = 0; _i120 < _size115; ++_i120)
        {
          var elem121 = null;
          elem121 = input.readString();
          this.urisNotFound.push(elem121);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.purgeId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PurgeInitiationResult.prototype.write = function(output) {
  output.writeStructBegin('PurgeInitiationResult');
  if (this.toBePurged !== null && this.toBePurged !== undefined) {
    output.writeFieldBegin('toBePurged', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.I64, this.toBePurged.length);
    for (var iter122 in this.toBePurged)
    {
      if (this.toBePurged.hasOwnProperty(iter122))
      {
        iter122 = this.toBePurged[iter122];
        output.writeI64(iter122);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.urisNotFound !== null && this.urisNotFound !== undefined) {
    output.writeFieldBegin('urisNotFound', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.urisNotFound.length);
    for (var iter123 in this.urisNotFound)
    {
      if (this.urisNotFound.hasOwnProperty(iter123))
      {
        iter123 = this.urisNotFound[iter123];
        output.writeString(iter123);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.purgeId !== null && this.purgeId !== undefined) {
    output.writeFieldBegin('purgeId', Thrift.Type.I64, 3);
    output.writeI64(this.purgeId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

PurgeInfo = module.exports.PurgeInfo = function(args) {
  this.id = null;
  this.timeStamp = null;
  this.documentUris = null;
  this.documentUrisNotFound = null;
  this.purgeDocumentIds = null;
  this.completelyPurgedDocumentIds = null;
  this.user = null;
  this.name = null;
  this.description = null;
  this.resolved = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.timeStamp !== undefined) {
      this.timeStamp = args.timeStamp;
    }
    if (args.documentUris !== undefined) {
      this.documentUris = args.documentUris;
    }
    if (args.documentUrisNotFound !== undefined) {
      this.documentUrisNotFound = args.documentUrisNotFound;
    }
    if (args.purgeDocumentIds !== undefined) {
      this.purgeDocumentIds = args.purgeDocumentIds;
    }
    if (args.completelyPurgedDocumentIds !== undefined) {
      this.completelyPurgedDocumentIds = args.completelyPurgedDocumentIds;
    }
    if (args.user !== undefined) {
      this.user = args.user;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.description !== undefined) {
      this.description = args.description;
    }
    if (args.resolved !== undefined) {
      this.resolved = args.resolved;
    }
  }
};
PurgeInfo.prototype = {};
PurgeInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.timeStamp = new ezbakeBaseTypes_ttypes.DateTime();
        this.timeStamp.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size124 = 0;
        var _rtmp3128;
        this.documentUris = [];
        var _etype127 = 0;
        _rtmp3128 = input.readListBegin();
        _etype127 = _rtmp3128.etype;
        _size124 = _rtmp3128.size;
        for (var _i129 = 0; _i129 < _size124; ++_i129)
        {
          var elem130 = null;
          elem130 = input.readString();
          this.documentUris.push(elem130);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.LIST) {
        var _size131 = 0;
        var _rtmp3135;
        this.documentUrisNotFound = [];
        var _etype134 = 0;
        _rtmp3135 = input.readListBegin();
        _etype134 = _rtmp3135.etype;
        _size131 = _rtmp3135.size;
        for (var _i136 = 0; _i136 < _size131; ++_i136)
        {
          var elem137 = null;
          elem137 = input.readString();
          this.documentUrisNotFound.push(elem137);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.SET) {
        var _size138 = 0;
        var _rtmp3142;
        this.purgeDocumentIds = [];
        var _etype141 = 0;
        _rtmp3142 = input.readSetBegin();
        _etype141 = _rtmp3142.etype;
        _size138 = _rtmp3142.size;
        for (var _i143 = 0; _i143 < _size138; ++_i143)
        {
          var elem144 = null;
          elem144 = input.readI64();
          this.purgeDocumentIds.push(elem144);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.SET) {
        var _size145 = 0;
        var _rtmp3149;
        this.completelyPurgedDocumentIds = [];
        var _etype148 = 0;
        _rtmp3149 = input.readSetBegin();
        _etype148 = _rtmp3149.etype;
        _size145 = _rtmp3149.size;
        for (var _i150 = 0; _i150 < _size145; ++_i150)
        {
          var elem151 = null;
          elem151 = input.readI64();
          this.completelyPurgedDocumentIds.push(elem151);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.description = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.BOOL) {
        this.resolved = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PurgeInfo.prototype.write = function(output) {
  output.writeStructBegin('PurgeInfo');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.timeStamp !== null && this.timeStamp !== undefined) {
    output.writeFieldBegin('timeStamp', Thrift.Type.STRUCT, 2);
    this.timeStamp.write(output);
    output.writeFieldEnd();
  }
  if (this.documentUris !== null && this.documentUris !== undefined) {
    output.writeFieldBegin('documentUris', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.documentUris.length);
    for (var iter152 in this.documentUris)
    {
      if (this.documentUris.hasOwnProperty(iter152))
      {
        iter152 = this.documentUris[iter152];
        output.writeString(iter152);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.documentUrisNotFound !== null && this.documentUrisNotFound !== undefined) {
    output.writeFieldBegin('documentUrisNotFound', Thrift.Type.LIST, 4);
    output.writeListBegin(Thrift.Type.STRING, this.documentUrisNotFound.length);
    for (var iter153 in this.documentUrisNotFound)
    {
      if (this.documentUrisNotFound.hasOwnProperty(iter153))
      {
        iter153 = this.documentUrisNotFound[iter153];
        output.writeString(iter153);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.purgeDocumentIds !== null && this.purgeDocumentIds !== undefined) {
    output.writeFieldBegin('purgeDocumentIds', Thrift.Type.SET, 5);
    output.writeSetBegin(Thrift.Type.I64, this.purgeDocumentIds.length);
    for (var iter154 in this.purgeDocumentIds)
    {
      if (this.purgeDocumentIds.hasOwnProperty(iter154))
      {
        iter154 = this.purgeDocumentIds[iter154];
        output.writeI64(iter154);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.completelyPurgedDocumentIds !== null && this.completelyPurgedDocumentIds !== undefined) {
    output.writeFieldBegin('completelyPurgedDocumentIds', Thrift.Type.SET, 6);
    output.writeSetBegin(Thrift.Type.I64, this.completelyPurgedDocumentIds.length);
    for (var iter155 in this.completelyPurgedDocumentIds)
    {
      if (this.completelyPurgedDocumentIds.hasOwnProperty(iter155))
      {
        iter155 = this.completelyPurgedDocumentIds[iter155];
        output.writeI64(iter155);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 7);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 8);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.description !== null && this.description !== undefined) {
    output.writeFieldBegin('description', Thrift.Type.STRING, 9);
    output.writeString(this.description);
    output.writeFieldEnd();
  }
  if (this.resolved !== null && this.resolved !== undefined) {
    output.writeFieldBegin('resolved', Thrift.Type.BOOL, 10);
    output.writeBool(this.resolved);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

PositionsToUris = module.exports.PositionsToUris = function(args) {
  this.mapping = null;
  this.unfoundPositionList = null;
  if (args) {
    if (args.mapping !== undefined) {
      this.mapping = args.mapping;
    }
    if (args.unfoundPositionList !== undefined) {
      this.unfoundPositionList = args.unfoundPositionList;
    }
  }
};
PositionsToUris.prototype = {};
PositionsToUris.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.MAP) {
        var _size156 = 0;
        var _rtmp3160;
        this.mapping = {};
        var _ktype157 = 0;
        var _vtype158 = 0;
        _rtmp3160 = input.readMapBegin();
        _ktype157 = _rtmp3160.ktype;
        _vtype158 = _rtmp3160.vtype;
        _size156 = _rtmp3160.size;
        for (var _i161 = 0; _i161 < _size156; ++_i161)
        {
          var key162 = null;
          var val163 = null;
          key162 = input.readI64();
          val163 = input.readString();
          this.mapping[key162] = val163;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size164 = 0;
        var _rtmp3168;
        this.unfoundPositionList = [];
        var _etype167 = 0;
        _rtmp3168 = input.readListBegin();
        _etype167 = _rtmp3168.etype;
        _size164 = _rtmp3168.size;
        for (var _i169 = 0; _i169 < _size164; ++_i169)
        {
          var elem170 = null;
          elem170 = input.readI64();
          this.unfoundPositionList.push(elem170);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PositionsToUris.prototype.write = function(output) {
  output.writeStructBegin('PositionsToUris');
  if (this.mapping !== null && this.mapping !== undefined) {
    output.writeFieldBegin('mapping', Thrift.Type.MAP, 1);
    output.writeMapBegin(Thrift.Type.I64, Thrift.Type.STRING, Thrift.objectLength(this.mapping));
    for (var kiter171 in this.mapping)
    {
      if (this.mapping.hasOwnProperty(kiter171))
      {
        var viter172 = this.mapping[kiter171];
        output.writeI64(kiter171);
        output.writeString(viter172);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.unfoundPositionList !== null && this.unfoundPositionList !== undefined) {
    output.writeFieldBegin('unfoundPositionList', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I64, this.unfoundPositionList.length);
    for (var iter173 in this.unfoundPositionList)
    {
      if (this.unfoundPositionList.hasOwnProperty(iter173))
      {
        iter173 = this.unfoundPositionList[iter173];
        output.writeI64(iter173);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AgeOffRule = module.exports.AgeOffRule = function(args) {
  this.name = null;
  this.id = null;
  this.retentionDurationSeconds = null;
  this.maximumExecutionPeriod = null;
  this.application = null;
  this.user = null;
  this.timeStamp = null;
  if (args) {
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.retentionDurationSeconds !== undefined) {
      this.retentionDurationSeconds = args.retentionDurationSeconds;
    }
    if (args.maximumExecutionPeriod !== undefined) {
      this.maximumExecutionPeriod = args.maximumExecutionPeriod;
    }
    if (args.application !== undefined) {
      this.application = args.application;
    }
    if (args.user !== undefined) {
      this.user = args.user;
    }
    if (args.timeStamp !== undefined) {
      this.timeStamp = args.timeStamp;
    }
  }
};
AgeOffRule.prototype = {};
AgeOffRule.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.retentionDurationSeconds = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.maximumExecutionPeriod = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.application = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRUCT) {
        this.timeStamp = new ezbakeBaseTypes_ttypes.DateTime();
        this.timeStamp.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AgeOffRule.prototype.write = function(output) {
  output.writeStructBegin('AgeOffRule');
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 1);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 2);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.retentionDurationSeconds !== null && this.retentionDurationSeconds !== undefined) {
    output.writeFieldBegin('retentionDurationSeconds', Thrift.Type.I64, 3);
    output.writeI64(this.retentionDurationSeconds);
    output.writeFieldEnd();
  }
  if (this.maximumExecutionPeriod !== null && this.maximumExecutionPeriod !== undefined) {
    output.writeFieldBegin('maximumExecutionPeriod', Thrift.Type.I32, 4);
    output.writeI32(this.maximumExecutionPeriod);
    output.writeFieldEnd();
  }
  if (this.application !== null && this.application !== undefined) {
    output.writeFieldBegin('application', Thrift.Type.STRING, 5);
    output.writeString(this.application);
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 6);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  if (this.timeStamp !== null && this.timeStamp !== undefined) {
    output.writeFieldBegin('timeStamp', Thrift.Type.STRUCT, 7);
    this.timeStamp.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AddDocumentEntry = module.exports.AddDocumentEntry = function(args) {
  this.uri = null;
  this.parents = null;
  if (args) {
    if (args.uri !== undefined) {
      this.uri = args.uri;
    }
    if (args.parents !== undefined) {
      this.parents = args.parents;
    }
  }
};
AddDocumentEntry.prototype = {};
AddDocumentEntry.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uri = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size174 = 0;
        var _rtmp3178;
        this.parents = [];
        var _etype177 = 0;
        _rtmp3178 = input.readSetBegin();
        _etype177 = _rtmp3178.etype;
        _size174 = _rtmp3178.size;
        for (var _i179 = 0; _i179 < _size174; ++_i179)
        {
          var elem180 = null;
          elem180 = new ttypes.InheritanceInfo();
          elem180.read(input);
          this.parents.push(elem180);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AddDocumentEntry.prototype.write = function(output) {
  output.writeStructBegin('AddDocumentEntry');
  if (this.uri !== null && this.uri !== undefined) {
    output.writeFieldBegin('uri', Thrift.Type.STRING, 1);
    output.writeString(this.uri);
    output.writeFieldEnd();
  }
  if (this.parents !== null && this.parents !== undefined) {
    output.writeFieldBegin('parents', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.STRUCT, this.parents.length);
    for (var iter181 in this.parents)
    {
      if (this.parents.hasOwnProperty(iter181))
      {
        iter181 = this.parents[iter181];
        iter181.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AddDocumentResult = module.exports.AddDocumentResult = function(args) {
  this.status = null;
  this.documentId = null;
  this.parentsNotFound = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.documentId !== undefined) {
      this.documentId = args.documentId;
    }
    if (args.parentsNotFound !== undefined) {
      this.parentsNotFound = args.parentsNotFound;
    }
  }
};
AddDocumentResult.prototype = {};
AddDocumentResult.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.documentId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size182 = 0;
        var _rtmp3186;
        this.parentsNotFound = [];
        var _etype185 = 0;
        _rtmp3186 = input.readListBegin();
        _etype185 = _rtmp3186.etype;
        _size182 = _rtmp3186.size;
        for (var _i187 = 0; _i187 < _size182; ++_i187)
        {
          var elem188 = null;
          elem188 = input.readString();
          this.parentsNotFound.push(elem188);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AddDocumentResult.prototype.write = function(output) {
  output.writeStructBegin('AddDocumentResult');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 1);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.documentId !== null && this.documentId !== undefined) {
    output.writeFieldBegin('documentId', Thrift.Type.I64, 2);
    output.writeI64(this.documentId);
    output.writeFieldEnd();
  }
  if (this.parentsNotFound !== null && this.parentsNotFound !== undefined) {
    output.writeFieldBegin('parentsNotFound', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.parentsNotFound.length);
    for (var iter189 in this.parentsNotFound)
    {
      if (this.parentsNotFound.hasOwnProperty(iter189))
      {
        iter189 = this.parentsNotFound[iter189];
        output.writeString(iter189);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceDocumentNotFoundException = module.exports.ProvenanceDocumentNotFoundException = function(args) {
  Thrift.TException.call(this, "ProvenanceDocumentNotFoundException")
  this.name = "ProvenanceDocumentNotFoundException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceDocumentNotFoundException, Thrift.TException);
ProvenanceDocumentNotFoundException.prototype.name = 'ProvenanceDocumentNotFoundException';
ProvenanceDocumentNotFoundException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceDocumentNotFoundException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceDocumentNotFoundException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceParentDocumentNotFoundException = module.exports.ProvenanceParentDocumentNotFoundException = function(args) {
  Thrift.TException.call(this, "ProvenanceParentDocumentNotFoundException")
  this.name = "ProvenanceParentDocumentNotFoundException"
  this.message = null;
  this.parentUris = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
    if (args.parentUris !== undefined) {
      this.parentUris = args.parentUris;
    }
  }
};
Thrift.inherits(ProvenanceParentDocumentNotFoundException, Thrift.TException);
ProvenanceParentDocumentNotFoundException.prototype.name = 'ProvenanceParentDocumentNotFoundException';
ProvenanceParentDocumentNotFoundException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size190 = 0;
        var _rtmp3194;
        this.parentUris = [];
        var _etype193 = 0;
        _rtmp3194 = input.readListBegin();
        _etype193 = _rtmp3194.etype;
        _size190 = _rtmp3194.size;
        for (var _i195 = 0; _i195 < _size190; ++_i195)
        {
          var elem196 = null;
          elem196 = input.readString();
          this.parentUris.push(elem196);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceParentDocumentNotFoundException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceParentDocumentNotFoundException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  if (this.parentUris !== null && this.parentUris !== undefined) {
    output.writeFieldBegin('parentUris', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.parentUris.length);
    for (var iter197 in this.parentUris)
    {
      if (this.parentUris.hasOwnProperty(iter197))
      {
        iter197 = this.parentUris[iter197];
        output.writeString(iter197);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceAgeOffRuleNameExistsException = module.exports.ProvenanceAgeOffRuleNameExistsException = function(args) {
  Thrift.TException.call(this, "ProvenanceAgeOffRuleNameExistsException")
  this.name = "ProvenanceAgeOffRuleNameExistsException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceAgeOffRuleNameExistsException, Thrift.TException);
ProvenanceAgeOffRuleNameExistsException.prototype.name = 'ProvenanceAgeOffRuleNameExistsException';
ProvenanceAgeOffRuleNameExistsException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceAgeOffRuleNameExistsException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceAgeOffRuleNameExistsException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceIllegalAgeOffDurationSecondsException = module.exports.ProvenanceIllegalAgeOffDurationSecondsException = function(args) {
  Thrift.TException.call(this, "ProvenanceIllegalAgeOffDurationSecondsException")
  this.name = "ProvenanceIllegalAgeOffDurationSecondsException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceIllegalAgeOffDurationSecondsException, Thrift.TException);
ProvenanceIllegalAgeOffDurationSecondsException.prototype.name = 'ProvenanceIllegalAgeOffDurationSecondsException';
ProvenanceIllegalAgeOffDurationSecondsException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceIllegalAgeOffDurationSecondsException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceIllegalAgeOffDurationSecondsException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceIllegalAgeOffRuleNameException = module.exports.ProvenanceIllegalAgeOffRuleNameException = function(args) {
  Thrift.TException.call(this, "ProvenanceIllegalAgeOffRuleNameException")
  this.name = "ProvenanceIllegalAgeOffRuleNameException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceIllegalAgeOffRuleNameException, Thrift.TException);
ProvenanceIllegalAgeOffRuleNameException.prototype.name = 'ProvenanceIllegalAgeOffRuleNameException';
ProvenanceIllegalAgeOffRuleNameException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceIllegalAgeOffRuleNameException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceIllegalAgeOffRuleNameException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceIllegalMaximumExecutionPeriodException = module.exports.ProvenanceIllegalMaximumExecutionPeriodException = function(args) {
  Thrift.TException.call(this, "ProvenanceIllegalMaximumExecutionPeriodException")
  this.name = "ProvenanceIllegalMaximumExecutionPeriodException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceIllegalMaximumExecutionPeriodException, Thrift.TException);
ProvenanceIllegalMaximumExecutionPeriodException.prototype.name = 'ProvenanceIllegalMaximumExecutionPeriodException';
ProvenanceIllegalMaximumExecutionPeriodException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceIllegalMaximumExecutionPeriodException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceIllegalMaximumExecutionPeriodException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceAgeOffRuleNotFoundException = module.exports.ProvenanceAgeOffRuleNotFoundException = function(args) {
  Thrift.TException.call(this, "ProvenanceAgeOffRuleNotFoundException")
  this.name = "ProvenanceAgeOffRuleNotFoundException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceAgeOffRuleNotFoundException, Thrift.TException);
ProvenanceAgeOffRuleNotFoundException.prototype.name = 'ProvenanceAgeOffRuleNotFoundException';
ProvenanceAgeOffRuleNotFoundException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceAgeOffRuleNotFoundException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceAgeOffRuleNotFoundException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceDocumentExistsException = module.exports.ProvenanceDocumentExistsException = function(args) {
  Thrift.TException.call(this, "ProvenanceDocumentExistsException")
  this.name = "ProvenanceDocumentExistsException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceDocumentExistsException, Thrift.TException);
ProvenanceDocumentExistsException.prototype.name = 'ProvenanceDocumentExistsException';
ProvenanceDocumentExistsException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceDocumentExistsException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceDocumentExistsException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceCircularInheritanceNotAllowedException = module.exports.ProvenanceCircularInheritanceNotAllowedException = function(args) {
  Thrift.TException.call(this, "ProvenanceCircularInheritanceNotAllowedException")
  this.name = "ProvenanceCircularInheritanceNotAllowedException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceCircularInheritanceNotAllowedException, Thrift.TException);
ProvenanceCircularInheritanceNotAllowedException.prototype.name = 'ProvenanceCircularInheritanceNotAllowedException';
ProvenanceCircularInheritanceNotAllowedException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceCircularInheritanceNotAllowedException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceCircularInheritanceNotAllowedException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenancePurgeIdNotFoundException = module.exports.ProvenancePurgeIdNotFoundException = function(args) {
  Thrift.TException.call(this, "ProvenancePurgeIdNotFoundException")
  this.name = "ProvenancePurgeIdNotFoundException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenancePurgeIdNotFoundException, Thrift.TException);
ProvenancePurgeIdNotFoundException.prototype.name = 'ProvenancePurgeIdNotFoundException';
ProvenancePurgeIdNotFoundException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenancePurgeIdNotFoundException.prototype.write = function(output) {
  output.writeStructBegin('ProvenancePurgeIdNotFoundException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceAgeOffExistsException = module.exports.ProvenanceAgeOffExistsException = function(args) {
  Thrift.TException.call(this, "ProvenanceAgeOffExistsException")
  this.name = "ProvenanceAgeOffExistsException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceAgeOffExistsException, Thrift.TException);
ProvenanceAgeOffExistsException.prototype.name = 'ProvenanceAgeOffExistsException';
ProvenanceAgeOffExistsException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceAgeOffExistsException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceAgeOffExistsException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceAgeOffInheritanceExistsException = module.exports.ProvenanceAgeOffInheritanceExistsException = function(args) {
  Thrift.TException.call(this, "ProvenanceAgeOffInheritanceExistsException")
  this.name = "ProvenanceAgeOffInheritanceExistsException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceAgeOffInheritanceExistsException, Thrift.TException);
ProvenanceAgeOffInheritanceExistsException.prototype.name = 'ProvenanceAgeOffInheritanceExistsException';
ProvenanceAgeOffInheritanceExistsException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceAgeOffInheritanceExistsException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceAgeOffInheritanceExistsException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceDocumentNotInPurgeException = module.exports.ProvenanceDocumentNotInPurgeException = function(args) {
  Thrift.TException.call(this, "ProvenanceDocumentNotInPurgeException")
  this.name = "ProvenanceDocumentNotInPurgeException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceDocumentNotInPurgeException, Thrift.TException);
ProvenanceDocumentNotInPurgeException.prototype.name = 'ProvenanceDocumentNotInPurgeException';
ProvenanceDocumentNotInPurgeException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceDocumentNotInPurgeException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceDocumentNotInPurgeException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceAlreadyAgedException = module.exports.ProvenanceAlreadyAgedException = function(args) {
  Thrift.TException.call(this, "ProvenanceAlreadyAgedException")
  this.name = "ProvenanceAlreadyAgedException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceAlreadyAgedException, Thrift.TException);
ProvenanceAlreadyAgedException.prototype.name = 'ProvenanceAlreadyAgedException';
ProvenanceAlreadyAgedException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceAlreadyAgedException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceAlreadyAgedException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProvenanceExceedsMaxBatchSizeException = module.exports.ProvenanceExceedsMaxBatchSizeException = function(args) {
  Thrift.TException.call(this, "ProvenanceExceedsMaxBatchSizeException")
  this.name = "ProvenanceExceedsMaxBatchSizeException"
  this.message = null;
  if (args) {
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
Thrift.inherits(ProvenanceExceedsMaxBatchSizeException, Thrift.TException);
ProvenanceExceedsMaxBatchSizeException.prototype.name = 'ProvenanceExceedsMaxBatchSizeException';
ProvenanceExceedsMaxBatchSizeException.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProvenanceExceedsMaxBatchSizeException.prototype.write = function(output) {
  output.writeStructBegin('ProvenanceExceedsMaxBatchSizeException');
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 1);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ttypes.SERVICE_NAME = 'EzProvenanceService';
