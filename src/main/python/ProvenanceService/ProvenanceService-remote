#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from ProvenanceService import ProvenanceService
from ProvenanceService.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  i64 addAgeOffRule(EzSecurityToken securityToken, string name, i64 retentionDurationSeconds, i32 maximumExecutionPeriod)'
  print '  AgeOffRule getAgeOffRuleById(EzSecurityToken securityToken, i64 ruleId)'
  print '  AgeOffRule getAgeOffRule(EzSecurityToken securityToken, string name)'
  print '  void updateAgeOffRule(EzSecurityToken securityToken, string name, i64 retentionDurationSeconds)'
  print '   getAllAgeOffRules(EzSecurityToken securityToken, i32 limit, i32 page)'
  print '  i32 countAgeOffRules(EzSecurityToken securityToken)'
  print '  i64 addDocument(EzSecurityToken token, string uri,  parents,  ageOffRules)'
  print '   addDocuments(EzSecurityToken securityToken,  documents,  ageOffRules)'
  print '  i32 getAddDocumentsMaxSize(EzSecurityToken securityToken)'
  print '  AgeOffInitiationResult startAgeOffEvent(EzSecurityToken securityToken, i64 ruleId, DateTime effectiveTime)'
  print '  void markDocumentAsAged(EzSecurityToken securityToken,  agedDocumentIds)'
  print '  DocumentInfo getDocumentInfo(EzSecurityToken securityToken, i64 id, string uri)'
  print '  DerivedResult getDocumentAncestors(EzSecurityToken securityToken,  uris)'
  print '  DerivedResult getDocumentDescendants(EzSecurityToken securityToken,  uris)'
  print '  PurgeInitiationResult markDocumentForPurge(EzSecurityToken securityToken,  uris, string name, string description)'
  print '  PositionsToUris getDocumentUriFromId(EzSecurityToken securityToken,  positionsList)'
  print '  ConversionResult getDocumentConvertedUrisFromIds(EzSecurityToken securityToken,  ids)'
  print '  ConversionResult getDocumentConvertedUrisFromUris(EzSecurityToken securityToken,  uris)'
  print '  PurgeInfo getPurgeInfo(EzSecurityToken securityToken, i64 purgeId)'
  print '   getAllPurgeIds(EzSecurityToken securityToken)'
  print '  void updatePurge(EzSecurityToken securityToken, i64 purgeId,  completelyPurged, string note, bool resolved)'
  print '  void removeDocumentAgeOffRuleInheritance(EzSecurityToken securityToken, i64 documentId, string documentUri, i64 parentId, string parentUri)'
  print '  void removeDocumentExplicitAgeOffRule(EzSecurityToken securityToken, i64 documentId, string documentUri, i64 ageOffRuleId)'
  print '  void addDocumentExplicitAgeOffRule(EzSecurityToken securityToken, i64 documentId, string documentUri, AgeOffMapping ageOffMapping)'
  print '  void addDocumentInheritanceInfo(EzSecurityToken securityToken, i64 documentId, string documentUri, InheritanceInfo inheritanceInfo)'
  print '  void recordObjectAccess(EzSecurityToken securityToken, string documentUri, ObjectAccessType accessType)'
  print '  ResultsAndContinuation fetchUsersDocuments(EzSecurityToken securityToken, string userPrincipal, DateTime startDateTime, DateTime stopDateTime, i32 numToFetch, AccumuloContinuationPoint continuationPoint)'
  print '  ResultsAndContinuation fetchDocumentUsers(EzSecurityToken securityToken, string documentUri, DateTime startDateTime, DateTime stopDateTime, i32 numToFetch, AccumuloContinuationPoint continuationPoint)'
  print '  bool ping()'
  print '  MetricRegistryThrift getMetricRegistryThrift()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ProvenanceService.Client(protocol)
transport.open()

if cmd == 'addAgeOffRule':
  if len(args) != 4:
    print 'addAgeOffRule requires 4 args'
    sys.exit(1)
  pp.pprint(client.addAgeOffRule(eval(args[0]),args[1],eval(args[2]),eval(args[3]),))

elif cmd == 'getAgeOffRuleById':
  if len(args) != 2:
    print 'getAgeOffRuleById requires 2 args'
    sys.exit(1)
  pp.pprint(client.getAgeOffRuleById(eval(args[0]),eval(args[1]),))

elif cmd == 'getAgeOffRule':
  if len(args) != 2:
    print 'getAgeOffRule requires 2 args'
    sys.exit(1)
  pp.pprint(client.getAgeOffRule(eval(args[0]),args[1],))

elif cmd == 'updateAgeOffRule':
  if len(args) != 3:
    print 'updateAgeOffRule requires 3 args'
    sys.exit(1)
  pp.pprint(client.updateAgeOffRule(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'getAllAgeOffRules':
  if len(args) != 3:
    print 'getAllAgeOffRules requires 3 args'
    sys.exit(1)
  pp.pprint(client.getAllAgeOffRules(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'countAgeOffRules':
  if len(args) != 1:
    print 'countAgeOffRules requires 1 args'
    sys.exit(1)
  pp.pprint(client.countAgeOffRules(eval(args[0]),))

elif cmd == 'addDocument':
  if len(args) != 4:
    print 'addDocument requires 4 args'
    sys.exit(1)
  pp.pprint(client.addDocument(eval(args[0]),args[1],eval(args[2]),eval(args[3]),))

elif cmd == 'addDocuments':
  if len(args) != 3:
    print 'addDocuments requires 3 args'
    sys.exit(1)
  pp.pprint(client.addDocuments(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'getAddDocumentsMaxSize':
  if len(args) != 1:
    print 'getAddDocumentsMaxSize requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAddDocumentsMaxSize(eval(args[0]),))

elif cmd == 'startAgeOffEvent':
  if len(args) != 3:
    print 'startAgeOffEvent requires 3 args'
    sys.exit(1)
  pp.pprint(client.startAgeOffEvent(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'markDocumentAsAged':
  if len(args) != 2:
    print 'markDocumentAsAged requires 2 args'
    sys.exit(1)
  pp.pprint(client.markDocumentAsAged(eval(args[0]),eval(args[1]),))

elif cmd == 'getDocumentInfo':
  if len(args) != 3:
    print 'getDocumentInfo requires 3 args'
    sys.exit(1)
  pp.pprint(client.getDocumentInfo(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'getDocumentAncestors':
  if len(args) != 2:
    print 'getDocumentAncestors requires 2 args'
    sys.exit(1)
  pp.pprint(client.getDocumentAncestors(eval(args[0]),eval(args[1]),))

elif cmd == 'getDocumentDescendants':
  if len(args) != 2:
    print 'getDocumentDescendants requires 2 args'
    sys.exit(1)
  pp.pprint(client.getDocumentDescendants(eval(args[0]),eval(args[1]),))

elif cmd == 'markDocumentForPurge':
  if len(args) != 4:
    print 'markDocumentForPurge requires 4 args'
    sys.exit(1)
  pp.pprint(client.markDocumentForPurge(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'getDocumentUriFromId':
  if len(args) != 2:
    print 'getDocumentUriFromId requires 2 args'
    sys.exit(1)
  pp.pprint(client.getDocumentUriFromId(eval(args[0]),eval(args[1]),))

elif cmd == 'getDocumentConvertedUrisFromIds':
  if len(args) != 2:
    print 'getDocumentConvertedUrisFromIds requires 2 args'
    sys.exit(1)
  pp.pprint(client.getDocumentConvertedUrisFromIds(eval(args[0]),eval(args[1]),))

elif cmd == 'getDocumentConvertedUrisFromUris':
  if len(args) != 2:
    print 'getDocumentConvertedUrisFromUris requires 2 args'
    sys.exit(1)
  pp.pprint(client.getDocumentConvertedUrisFromUris(eval(args[0]),eval(args[1]),))

elif cmd == 'getPurgeInfo':
  if len(args) != 2:
    print 'getPurgeInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.getPurgeInfo(eval(args[0]),eval(args[1]),))

elif cmd == 'getAllPurgeIds':
  if len(args) != 1:
    print 'getAllPurgeIds requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAllPurgeIds(eval(args[0]),))

elif cmd == 'updatePurge':
  if len(args) != 5:
    print 'updatePurge requires 5 args'
    sys.exit(1)
  pp.pprint(client.updatePurge(eval(args[0]),eval(args[1]),eval(args[2]),args[3],eval(args[4]),))

elif cmd == 'removeDocumentAgeOffRuleInheritance':
  if len(args) != 5:
    print 'removeDocumentAgeOffRuleInheritance requires 5 args'
    sys.exit(1)
  pp.pprint(client.removeDocumentAgeOffRuleInheritance(eval(args[0]),eval(args[1]),args[2],eval(args[3]),args[4],))

elif cmd == 'removeDocumentExplicitAgeOffRule':
  if len(args) != 4:
    print 'removeDocumentExplicitAgeOffRule requires 4 args'
    sys.exit(1)
  pp.pprint(client.removeDocumentExplicitAgeOffRule(eval(args[0]),eval(args[1]),args[2],eval(args[3]),))

elif cmd == 'addDocumentExplicitAgeOffRule':
  if len(args) != 4:
    print 'addDocumentExplicitAgeOffRule requires 4 args'
    sys.exit(1)
  pp.pprint(client.addDocumentExplicitAgeOffRule(eval(args[0]),eval(args[1]),args[2],eval(args[3]),))

elif cmd == 'addDocumentInheritanceInfo':
  if len(args) != 4:
    print 'addDocumentInheritanceInfo requires 4 args'
    sys.exit(1)
  pp.pprint(client.addDocumentInheritanceInfo(eval(args[0]),eval(args[1]),args[2],eval(args[3]),))

elif cmd == 'recordObjectAccess':
  if len(args) != 3:
    print 'recordObjectAccess requires 3 args'
    sys.exit(1)
  pp.pprint(client.recordObjectAccess(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'fetchUsersDocuments':
  if len(args) != 6:
    print 'fetchUsersDocuments requires 6 args'
    sys.exit(1)
  pp.pprint(client.fetchUsersDocuments(eval(args[0]),args[1],eval(args[2]),eval(args[3]),eval(args[4]),eval(args[5]),))

elif cmd == 'fetchDocumentUsers':
  if len(args) != 6:
    print 'fetchDocumentUsers requires 6 args'
    sys.exit(1)
  pp.pprint(client.fetchDocumentUsers(eval(args[0]),args[1],eval(args[2]),eval(args[3]),eval(args[4]),eval(args[5]),))

elif cmd == 'ping':
  if len(args) != 0:
    print 'ping requires 0 args'
    sys.exit(1)
  pp.pprint(client.ping())

elif cmd == 'getMetricRegistryThrift':
  if len(args) != 0:
    print 'getMetricRegistryThrift requires 0 args'
    sys.exit(1)
  pp.pprint(client.getMetricRegistryThrift())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
